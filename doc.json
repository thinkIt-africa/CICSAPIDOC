{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/add/farmer/farms": {
            "put": {
                "description": "Updates the details of farms associated with a farmer",
                "produces": [
                    "application/json"
                ],
                "summary": "Update farmer's farms",
                "operationId": "updateFarmerFarms",
                "parameters": [
                    {
                        "description": "Update Farmer Farms Request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.FarmerFarmsreq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/add/order/crop": {
            "post": {
                "description": "Updates the crops associated with a specific order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update Order Crops",
                "parameters": [
                    {
                        "description": "Update order crops request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.CropsUpdateOrder"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/add/quality/controller": {
            "post": {
                "description": "Creates a quality controller",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create Quality Controller",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Role ID",
                        "name": "role_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Full Name",
                        "name": "fullname",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Registration No",
                        "name": "regno",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "National Identification No",
                        "name": "nin",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Contact Phone",
                        "name": "contactphone",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Contact Email",
                        "name": "contactemail",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Signature",
                        "name": "signature",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "session_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "403": {
                        "description": "forbidden",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/admin/units": {
            "get": {
                "description": "Retrieve a list of administrative units based on pagination parameters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin_units"
                ],
                "summary": "Get administrative units",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page ID",
                        "name": "page_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page Size",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/airlines": {
            "get": {
                "description": "Retrieve a list of airlines with optional pagination parameters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "airlines"
                ],
                "summary": "Get a list of airlines",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page ID",
                        "name": "page_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Page Size",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.AirlineResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update the details of an existing airline by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "airlines"
                ],
                "summary": "Update an airline",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Airline ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Airline update request payload",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.UpdateAirlineRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.AirlineResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new airline with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "airlines"
                ],
                "summary": "Create a new airline",
                "parameters": [
                    {
                        "description": "Airline request payload",
                        "name": "airline",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.AirlineRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.AirlineResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/airlines/{id}": {
            "get": {
                "description": "Get details of an airline by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "airlines"
                ],
                "summary": "Get an airline",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Airline ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.AirlineResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/all/border/inspectors": {
            "get": {
                "description": "Retrieves border inspectors",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Return Border Inspectors",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page ID",
                        "name": "page_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page Size",
                        "name": "page_size",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/all/company/qcp1s": {
            "get": {
                "description": "Retrieves QCP1 report for multiple companies",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "QCP1 Companies Report",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Status",
                        "name": "status",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/all/company/qcp2s": {
            "get": {
                "description": "Generates a report for QCP2s of all companies",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Generate QCP2 Companies Report",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Status",
                        "name": "status",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.Qcp2sCompanyReport"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/all/company/qcp3s": {
            "get": {
                "description": "Generates a report for companies based on QCP3 checks",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Generate Companies Report for QCP3",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Status",
                        "name": "status",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/all/company/qcp4s": {
            "get": {
                "description": "Retrieves QCP4 companies report based on the provided status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "QCP4"
                ],
                "summary": "Get QCP4 companies report",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Status",
                        "name": "status",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "QCP4 companies report",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    }
                }
            }
        },
        "/all/company/qcp5s": {
            "get": {
                "description": "Retrieve reports for QCP5 companies based on status",
                "produces": [
                    "application/json"
                ],
                "summary": "Get QCP5 companies report",
                "operationId": "qcp5-companies-report",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Status of QCP5 companies",
                        "name": "status",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns QCP5 companies report",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/all/countries": {
            "get": {
                "description": "Retrieves a list of all countries or paginates the list based on the provided parameters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "country"
                ],
                "summary": "List all countries or paginate the list",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page ID for pagination",
                        "name": "page_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size for pagination",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/api.CountryRes"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/all/crops": {
            "get": {
                "description": "Retrieves all crops",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "crops"
                ],
                "summary": "Retrieve all crops",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.CropRes"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/all/details/reception/{id}": {
            "get": {
                "description": "Get all details related to a reception form",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get all reception details",
                "operationId": "get-all-reception-details",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Reception Form ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/api.ReceptionTypeResponse"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/all/districts": {
            "get": {
                "description": "Lists all districts with pagination support",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "districts"
                ],
                "summary": "List all districts",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page ID",
                        "name": "page_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page Size",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/api.DistrictRes"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/all/exit/handlers": {
            "get": {
                "description": "Retrieve a list of all exit handlers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "exit_handlers"
                ],
                "summary": "Get all exit handlers",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page ID",
                        "name": "page_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page Size",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/api.ExitHandlerResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/all/exit/points": {
            "get": {
                "description": "List all exit points with pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "exit_points"
                ],
                "summary": "List all exit points with pagination",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page ID",
                        "name": "page_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page Size",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/api.ExitPointResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/all/export/companies": {
            "get": {
                "description": "Retrieves a list of all export companies",
                "summary": "Retrieve All Export Companies",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/api.ExportCompanyResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/all/exporter/farmers/list": {
            "get": {
                "description": "Retrieves details of all farmers associated with a specific export company and crop",
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve all farmers for an export company and crop",
                "operationId": "allFarmersForExporters",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Export Company ID",
                        "name": "exportcompany_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Crop ID",
                        "name": "crop_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "additionalProperties": true
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/all/packhouse/inspectors": {
            "get": {
                "description": "Retrieves packhouse inspectors",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Return packhouse Inspectors",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page ID",
                        "name": "page_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page Size",
                        "name": "page_size",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/all/parishes": {
            "get": {
                "description": "Lists all the parishes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "List All Parishes",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page ID",
                        "name": "page_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page Size",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Parish list",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.Parish"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/all/parishes/{id}": {
            "get": {
                "description": "Lists all parishes for a particular district",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parishes"
                ],
                "summary": "List all parishes for a district",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "District ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.ParishRes"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/all/qcs/{id}": {
            "get": {
                "description": "Return QCS per exporter",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "QCS"
                ],
                "summary": "Return QCS per exporter",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/all/quality/controllers": {
            "get": {
                "description": "Lists all quality controllers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "List All Quality Controllers",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page ID",
                        "name": "page_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page Size",
                        "name": "page_size",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.UserResType"
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/all/supports": {
            "get": {
                "description": "Retrieves support accounts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Return Support Accounts",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page ID",
                        "name": "page_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page Size",
                        "name": "page_size",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/all/truck/hygienes": {
            "get": {
                "description": "Retrieve all truck hygiene records with optional pagination",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "hygiene"
                ],
                "summary": "Retrieve all truck hygiene records",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page ID",
                        "name": "page_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page Size",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.trackhygienelist"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/all/villages": {
            "get": {
                "description": "Lists all villages with pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Villages"
                ],
                "summary": "List All Villages",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page ID",
                        "name": "page_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page Size",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Villages",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.VillageResp"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/all/villages/{id}": {
            "get": {
                "description": "Lists all villages for a particular parish",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "villages"
                ],
                "summary": "List all villages for a parish",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Parish ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/api.VillageRes"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/all/zones": {
            "get": {
                "description": "List all zones with pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Zone"
                ],
                "summary": "List All Zones",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page ID",
                        "name": "page_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page Size",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Zones",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.AllZonesRow"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/all/zones/{id}": {
            "get": {
                "description": "Get zones for a specific district by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Zone"
                ],
                "summary": "Get Zones for District",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "District ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Zones",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.AllZonesRow"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/assign/farmer": {
            "post": {
                "description": "Assigns farmers to a specified export company if they are not already assigned",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Assign farmers to an export company",
                "operationId": "assignFarmerToExporter",
                "parameters": [
                    {
                        "description": "Farmer Exporter",
                        "name": "FarmerExporter",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.FarmerExporter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "403": {
                        "description": "Farmer already assigned to this company",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/attach/inspector/exporters": {
            "post": {
                "description": "Attach more exporters to an inspector",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Exporter"
                ],
                "summary": "Attach More Exporters",
                "parameters": [
                    {
                        "description": "Attach More Exporters Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.AttachMoreReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/attach/packhouse": {
            "post": {
                "description": "Attach a packhouse to an export company",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Attach Packhouse",
                "parameters": [
                    {
                        "description": "Packhouse attachment request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.AttachPackhouseRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/attach/qc/exporter": {
            "post": {
                "description": "Attaches a user to an export company as a QC exporter",
                "summary": "Attach QC Exporter",
                "parameters": [
                    {
                        "description": "Exporter attachment request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.ExporterAttachment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/attach/role": {
            "post": {
                "description": "Attach a specific role to a user by their IDs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roles"
                ],
                "summary": "Attach a role to a user",
                "parameters": [
                    {
                        "description": "Role attachment data",
                        "name": "AttachRoleRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.AttachRoleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/batch/packing/list/{id}": {
            "get": {
                "description": "Retrieves batch packing list details by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get Batch Packing List Details",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Batch Packing List ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/api.CustomDetailsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "404": {
                        "description": "Packing list not found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/border/consignment/stats": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Endpoint to get statistics related to border inspectors.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BorderInspection"
                ],
                "summary": "Get Border Inspector Stats",
                "responses": {
                    "200": {
                        "description": "Statistics response",
                        "schema": {
                            "$ref": "#/definitions/api.BorderInspectorStatsType"
                        }
                    },
                    "500": {
                        "description": "Internal server error response",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/border/inspector/roaster": {
            "get": {
                "description": "Fetch the border inspector roaster",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Inspector"
                ],
                "summary": "Fetch Border Inspector Roaster",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.RoasterRes"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/change/client/status": {
            "post": {
                "description": "Change the status of a client by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "clients"
                ],
                "summary": "Change client status",
                "parameters": [
                    {
                        "description": "Client status change request payload",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.ClientStatusReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/change/consignment/status": {
            "get": {
                "description": "Changes status of a consignment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Change Consignment Status",
                "parameters": [
                    {
                        "description": "Status request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.StatusReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/change/order/status": {
            "post": {
                "description": "Changes the status of a specific order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Change Order Status",
                "parameters": [
                    {
                        "description": "Order status request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.OrderStatus"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/change/user/status": {
            "post": {
                "description": "Toggle user status.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Toggle user status.",
                "parameters": [
                    {
                        "description": "Request to toggle user status",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.ToggleReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated Status",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/clients": {
            "get": {
                "description": "Retrieve a list of clients with pagination and filtering options",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "clients"
                ],
                "summary": "Get a list of clients",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page ID",
                        "name": "page_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Page Size",
                        "name": "page_size",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "session_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Status",
                        "name": "status",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.ClientResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update the details of a client by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "clients"
                ],
                "summary": "Update a client",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Client ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Client update request payload",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.UpdateClientRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ClientResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new client with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "clients"
                ],
                "summary": "Create a new client",
                "parameters": [
                    {
                        "description": "Client request payload",
                        "name": "client",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.ClientRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ClientResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/clients/count/{id}": {
            "get": {
                "description": "Get the count of clients categorized by their status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "clients"
                ],
                "summary": "Get count of clients by status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.CountsTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/clients/{id}": {
            "get": {
                "description": "Get details of a client by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "clients"
                ],
                "summary": "Get a client",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Client ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ClientResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/consignment/doctypes": {
            "get": {
                "description": "Retrieve a list of consignment document types with pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "consignment"
                ],
                "summary": "Retrieve a list of consignment document types",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page ID (min: 5, max: 10)",
                        "name": "page_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 5,
                        "description": "Page Size (min: 5, max: 10)",
                        "name": "page_size",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/api.Consignmentdoctype"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing consignment document type by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "consignment"
                ],
                "summary": "Update a consignment document type",
                "parameters": [
                    {
                        "description": "Consignment document type update request payload",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.UpdateConsignmentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.Consignmentdoctype"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new consignment document type",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "consignment"
                ],
                "summary": "Create a consignment document type",
                "parameters": [
                    {
                        "description": "Consignment document type creation request payload",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.ConsigmentDocTypeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.Consignmentdoctype"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/consignment/doctypes/{id}": {
            "get": {
                "description": "Retrieve a consignment document type from the database by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "consignment"
                ],
                "summary": "Retrieve a consignment document type by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Consignment document type ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.Consignmentdoctype"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/consignment/documents/{id}": {
            "delete": {
                "description": "Deletes documents related to a consignment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete Consignment Documents",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Document ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/consignment/reason-rejections": {
            "get": {
                "description": "Retrieve a paginated list of consignment reason rejections",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "consignment"
                ],
                "summary": "Retrieve a list of consignment reason rejections",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page ID",
                        "name": "page_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page Size",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.Consignmentreasonrejection"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new consignment reason rejection",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "consignment"
                ],
                "summary": "Create a consignment reason rejection",
                "parameters": [
                    {
                        "description": "Consignment Reason Rejection details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.ConsigmentReasonRejectionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.Consignmentreasonrejection"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/consignment/reason-rejections/{id}": {
            "get": {
                "description": "Retrieve details of a consignment reason rejection by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "consignment"
                ],
                "summary": "Retrieve a consignment reason rejection by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Consignment Reason Rejection ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.Consignmentreasonrejection"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a consignment reason rejection by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "consignment"
                ],
                "summary": "Update a consignment reason rejection",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Consignment Reason Rejection ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Consignment Reason Rejection details",
                        "name": "UpdateConsignmentReasonRejectionRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.UpdateConsignmentReasonRejectionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.Consignmentreasonrejection"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/consignment/rejection": {
            "put": {
                "description": "Update details of a consignment rejection by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "consignment"
                ],
                "summary": "Update a consignment rejection",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Consignment Rejection ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Consignment Rejection details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.UpdateConsignmentRejectionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.Consignmentrejection"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/consignment/rejection/{id}": {
            "get": {
                "description": "Retrieve a consignment rejection by its unique identifier",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "consignment"
                ],
                "summary": "Retrieve a consignment rejection by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Consignment Rejection ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.Consignmentrejection"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/consignment/rejections": {
            "get": {
                "description": "Retrieve a list of consignment rejections with pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "consignment"
                ],
                "summary": "List consignment rejections",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number (default 1)",
                        "name": "page_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size (default 10, max 10)",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/api.Consignmentrejection"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new consignment rejection",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "consignment"
                ],
                "summary": "Create a consignment rejection",
                "parameters": [
                    {
                        "description": "Consignment rejection creation request payload",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.ConsigmentRejectionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.Consignmentrejection"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/consignment/report/{id}": {
            "get": {
                "description": "Generate a consignment report based on the provided consignment number",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "consignment"
                ],
                "summary": "Generate a consignment report",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Consignment Number",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ConsignmentReport"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/convert/pdf64": {
            "post": {
                "description": "Convert a PDF file to a base64 encoded string",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Convert PDF to base64",
                "operationId": "convert-pdf-to-base64",
                "parameters": [
                    {
                        "description": "Context",
                        "name": "ctx",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "PDF file path",
                        "name": "filed",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Base64 encoded PDF",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/count/qcps/order/{id}": {
            "get": {
                "description": "Retrieves total QCPs for an order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Total Order QCPs",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Order ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/count/qcps/{id}": {
            "get": {
                "description": "Retrieves total QCPs for a session",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Total QCPs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/count/scheduled/consignments": {
            "get": {
                "description": "Retrieves count of consignments in different statuses",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get Count of Scheduled Consignments",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "session_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/api.CountResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/countries": {
            "get": {
                "description": "Retrieves a paginated list of countries based on the provided parameters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "country"
                ],
                "summary": "Retrieve paginated list of countries",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page ID for pagination",
                        "name": "page_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page size for pagination (min: 5, max: 10)",
                        "name": "page_size",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.CountryRes"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates the details of a specific country",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "country"
                ],
                "summary": "Update country details",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Country ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Country Code",
                        "name": "countrycode",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Country Name",
                        "name": "countryname",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.CountryRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new country with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "country"
                ],
                "summary": "Create a new country",
                "parameters": [
                    {
                        "description": "Country Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.CountryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.CountryRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/country/{id}": {
            "get": {
                "description": "Retrieves a country with the provided ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "country"
                ],
                "summary": "Retrieve a country by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Country ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.CountryRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/create-inspection-report": {
            "post": {
                "description": "Creates an inspection report based on the provided request.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Inspection Reports"
                ],
                "summary": "Create Inspection Report",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Context",
                        "name": "ctx",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Inspection Report Request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.InspectionReportReq"
                        }
                    },
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Export Company ID",
                        "name": "exportcompany_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Inspection report created successfully",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/create-user-logs/{activity_type}/{activity_description}": {
            "post": {
                "description": "Creates a log entry for user activities",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Logs"
                ],
                "summary": "Create User Logs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Activity Type",
                        "name": "activity_type",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Activity Description",
                        "name": "activity_description",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Log created successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/create/admin/account": {
            "post": {
                "description": "Creates an admin user account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create Admin Account",
                "parameters": [
                    {
                        "description": "Create Admin Account Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.AdminRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "403": {
                        "description": "forbidden",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/create/border/inspector": {
            "post": {
                "description": "Creates a border inspector",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create Border Inspector",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Role ID",
                        "name": "role_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Full Name",
                        "name": "fullname",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Registration No",
                        "name": "regno",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "National Identification No",
                        "name": "nin",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Contact Phone",
                        "name": "contactphone",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Contact Email",
                        "name": "contactemail",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Signature",
                        "name": "signature",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "District ID",
                        "name": "district_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Zone ID",
                        "name": "zone_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "403": {
                        "description": "forbidden",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/create/dcic/admin": {
            "post": {
                "description": "Creates an admin user account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create Admin Account",
                "parameters": [
                    {
                        "description": "Create Admin Account Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.AdminRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "403": {
                        "description": "forbidden",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/create/destruction/notice": {
            "post": {
                "description": "Create a destruction notice with provided data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "destruction"
                ],
                "summary": "Create a destruction notice",
                "parameters": [
                    {
                        "description": "Destruction Notice Data",
                        "name": "notice",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.DestructionNotice"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/create/exporter/manager": {
            "post": {
                "description": "Create export company manager",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Exporter"
                ],
                "summary": "Create export company manager",
                "parameters": [
                    {
                        "description": "Create Exporter Manager",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.ExporterManagerReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/create/inspection/recommendation": {
            "post": {
                "description": "Create an inspection recommendation with provided data",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "inspection"
                ],
                "summary": "Create an inspection recommendation",
                "parameters": [
                    {
                        "type": "string",
                        "name": "comment",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "consignment_no",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "session_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "status",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/create/inspection/report": {
            "post": {
                "description": "Creates an inspection report based on the provided request data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Inspection Report"
                ],
                "summary": "Create an inspection report",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Context",
                        "name": "ctx",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    }
                }
            }
        },
        "/create/interception/notice": {
            "post": {
                "description": "Create an inspection notice with provided data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "interception"
                ],
                "summary": "Create an inspection notice",
                "parameters": [
                    {
                        "description": "Interception Notice Data",
                        "name": "notice",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.InterceptionNotice"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/create/nppo/inspectors": {
            "post": {
                "description": "Create a new NNPO inspector",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NNPO Inspector"
                ],
                "summary": "Create NNPO inspector",
                "parameters": [
                    {
                        "description": "NNPO inspector details",
                        "name": "inspector",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.NNPORequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/create/other/reception/documents": {
            "post": {
                "description": "Create other reception documents",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create other reception documents",
                "operationId": "create-other-reception-documents",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Reception Document",
                        "name": "repdoc",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Description",
                        "name": "description",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Reception Form ID",
                        "name": "receptionform_id",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/create/packhouse/inspector": {
            "post": {
                "description": "Creates a packhouse inspector",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create Packhouse Inspector",
                "parameters": [
                    {
                        "description": "Full Name",
                        "name": "fullname",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Registration No",
                        "name": "regno",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "National Identification No",
                        "name": "nin",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Phone",
                        "name": "phone",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Email",
                        "name": "email",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Exporters",
                        "name": "exporters",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array"
                        }
                    },
                    {
                        "description": "Packhouses",
                        "name": "packhouses",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array"
                        }
                    },
                    {
                        "description": "Zones",
                        "name": "zones",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/create/qcp2/attributes": {
            "post": {
                "description": "Creates QCP2 attributes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create QCP2 Attributes",
                "parameters": [
                    {
                        "description": "QCP2 attributes",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.Qcp2AttributesRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/create/qcp2/recommendation": {
            "post": {
                "description": "Creates QCP2 recommendations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create QCP2 Recommendations",
                "parameters": [
                    {
                        "description": "QCP2 recommendations",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.Qcp2RecommendationsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/create/qcp3/attributes": {
            "post": {
                "description": "Creates attributes for QCP3",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create QCP3 Attributes",
                "parameters": [
                    {
                        "description": "QCP3 attributes details",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.QCP3AttributesRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/create/qcp3/recommendation": {
            "post": {
                "description": "Creates a recommendation for QCP3",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create QCP3 Recommendation",
                "parameters": [
                    {
                        "description": "QCP3 recommendation details",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.QCP3RecommendationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/create/qcp5/inspection/recommendation": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Endpoint to create a new QCP5 inspection recommendation.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "QCP5"
                ],
                "summary": "Create QCP5 Inspection Recommendation",
                "parameters": [
                    {
                        "description": "QCP5 Inspection Recommendation Request Payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.Qcp5StatusReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success response",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request response",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error response",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/create/qcp5/inspection/report": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Endpoint to create a new QCP5 inspection report.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "QCP5"
                ],
                "summary": "Create QCP5 Inspection Report",
                "parameters": [
                    {
                        "description": "QCP5 Inspection Report Request Payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.Qcp5InspectionReportReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success response",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request response",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error response",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/create/qcp5s/{consignment_no}": {
            "post": {
                "description": "Creates QCP5s based on the provided consignment number",
                "produces": [
                    "application/json"
                ],
                "summary": "Create QCP5s",
                "operationId": "create-qcp5s",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Consignment number",
                        "name": "consignment_no",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/create/reception/attributes": {
            "post": {
                "description": "Create attributes for a reception form including quality attributes and others",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reception"
                ],
                "summary": "Create Reception Attributes",
                "parameters": [
                    {
                        "description": "Reception Form Attributes",
                        "name": "receptionFormAttributes",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.ReceptionFormAttributesRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/create/reception/documents": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create reception documents with the given details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create reception documents",
                "operationId": "create-reception-documents",
                "parameters": [
                    {
                        "description": "Reception Documents Request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.ReceptionDocumentsRequests"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/create/reception/form": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a new reception form with the given details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create a new reception form",
                "operationId": "create-reception-form",
                "parameters": [
                    {
                        "description": "Reception Form Request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.ReceptionFormRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ReceptionformType"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/create/support/account": {
            "post": {
                "description": "Creates a support user account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create Support Account",
                "parameters": [
                    {
                        "description": "Create Support Account Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.SupportAccountRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "403": {
                        "description": "forbidden",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/create/truck/hygiene": {
            "post": {
                "description": "Create a new truck hygiene report with provided data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "hygiene"
                ],
                "summary": "Create a new truck hygiene report",
                "parameters": [
                    {
                        "description": "Truck Hygiene Request Data",
                        "name": "report",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.TruckHygieneRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/create/zonal/inspector": {
            "post": {
                "description": "Creates a zonal inspector",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create Zonal Inspector",
                "parameters": [
                    {
                        "description": "Full Name",
                        "name": "fullname",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "National Identification No",
                        "name": "nin",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Phone",
                        "name": "phone",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Email",
                        "name": "email",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Zones",
                        "name": "zones",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/create/zone": {
            "post": {
                "description": "Create a new zone with associated districts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Zone"
                ],
                "summary": "Create Zone",
                "parameters": [
                    {
                        "description": "Zone Details",
                        "name": "zone",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.ZonReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/crop/farmers/{id}": {
            "get": {
                "description": "Retrieves a list of farmers who supply a specific crop based on the provided crop ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve crop suppliers",
                "operationId": "returnCropSuppliers",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Crop ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/api.GetFarmerBasedCropRow"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/crops": {
            "get": {
                "description": "Retrieves a list of crops with pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "crops"
                ],
                "summary": "Retrieve a list of crops with pagination",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page ID",
                        "name": "page_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page Size",
                        "name": "page_size",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.CropRes"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates the details of a crop",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "crops"
                ],
                "summary": "Update crop details",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Crop ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Crop details to update",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.UpdateProductRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.CropRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new crop",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "crops"
                ],
                "summary": "Create a new crop",
                "parameters": [
                    {
                        "description": "Crop details to create",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.CropRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.CropRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/crops/count": {
            "get": {
                "description": "Returns the count of crops based on their status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "crops"
                ],
                "summary": "Get crop counts",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.CropCountRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/crops/status/update": {
            "post": {
                "description": "Updates the status of a crop",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "crops"
                ],
                "summary": "Update crop status",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.StatusReqIn"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/crops/{id}": {
            "get": {
                "description": "Retrieves a crop by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "crops"
                ],
                "summary": "Retrieve a crop by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Crop ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.CropRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/deactivate/crop": {
            "post": {
                "description": "Deactivates a crop on a specific order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Deactivate Crop on Order",
                "parameters": [
                    {
                        "description": "Deactivate crop request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.DeactivateCropReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/deactivate/exporter": {
            "post": {
                "description": "Deactivates an exporter",
                "summary": "Deactivate Exporter",
                "parameters": [
                    {
                        "description": "Deactivation request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.DeactiveReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/deactivate/farm/{id}": {
            "put": {
                "description": "Deactivates a farm based on the farm ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Deactivate a farm",
                "operationId": "deactivateFarm",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Farm ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/deactivate/packhouse": {
            "post": {
                "description": "Deactivates a packhouse",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Deactivate Packhouse",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Suspension report",
                        "name": "report",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Packhouse ID",
                        "name": "packhouse_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Status",
                        "name": "status",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/delete/farmer/farm/{id}": {
            "delete": {
                "description": "Deletes a specific farm associated with a farmer based on the farm ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a farm from a farmer",
                "operationId": "deleteFarmerFarm",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Farm ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/delete/truck/report/{id}": {
            "delete": {
                "description": "Delete trucks per consignment by vehicle ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete trucks per consignment",
                "operationId": "delete-trucks-per-consignment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Vehicle ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/destruction/notice/{id}": {
            "get": {
                "description": "Get destruction notice by consignment number",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get destruction notice",
                "operationId": "get-destruction-notice",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Consignment number",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/detach/farmer/from/exporter": {
            "post": {
                "description": "Detaches a farmer from a specific exporter",
                "produces": [
                    "application/json"
                ],
                "summary": "Detach a farmer from an exporter",
                "operationId": "detachFarmerFromExporter",
                "parameters": [
                    {
                        "description": "Detach Farmer From Exporter Request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.FarmExporterReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/detach/inspector": {
            "post": {
                "description": "Detaches a packhouse inspector from an exporter company",
                "summary": "Detach Inspector From Exporter",
                "parameters": [
                    {
                        "description": "User exporter request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.UserExporterReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/detailed/order/{id}": {
            "get": {
                "description": "Retrieves details of a specific order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve order details",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Order ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/district/sub/county/{id}": {
            "get": {
                "description": "Get all subcounties for a specific district",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Subcounty"
                ],
                "summary": "Get subcounties by district ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "District ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.subcountyRes"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/districts": {
            "put": {
                "description": "Update an existing district",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin_units"
                ],
                "summary": "Update an existing district",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "District ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "District data",
                        "name": "district",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.UpdaeDistrictReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.DistrictRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/districts/create": {
            "post": {
                "description": "Create a new district",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin_units"
                ],
                "summary": "Create a new district",
                "parameters": [
                    {
                        "description": "District data",
                        "name": "district",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.CreateDistrictReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/districts/{id}": {
            "get": {
                "description": "Retrieve an existing district by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin_units"
                ],
                "summary": "Retrieve an existing district",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "District ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.DistrictRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/documents/details/{id}": {
            "get": {
                "description": "Retrieve details of a document by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "documents"
                ],
                "summary": "Retrieve document details",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Document ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.AllDocumentDetailsRow"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/email/update/password": {
            "post": {
                "description": "Updates a user's email and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update Email and Password",
                "parameters": [
                    {
                        "description": "Update Email and Password Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.UpdateEmailRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/exit/handler/{id}": {
            "get": {
                "description": "Retrieve details of an exit handler by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "exit_handlers"
                ],
                "summary": "Retrieve exit handler details",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Exit handler ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ExitHandlerResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/exit/handlers": {
            "get": {
                "description": "Retrieve a list of exit handlers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "exit_handlers"
                ],
                "summary": "Retrieve a list of exit handlers",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page ID",
                        "name": "page_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page Size",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/api.ExitHandlerResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update the details of an exit handler",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "exit_handlers"
                ],
                "summary": "Update exit handler details",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Exit handler ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated exit handler data",
                        "name": "exithandler",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.UpdateExitHandlerRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ExitHandlerResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new exit handler",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "exit_handlers"
                ],
                "summary": "Create new exit handler",
                "parameters": [
                    {
                        "description": "Exit handler data",
                        "name": "exithandler",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.ExitHandlerRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ExitHandlerResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/exit/point/roaster": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Endpoint to get the exit point roaster.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BorderInspection"
                ],
                "summary": "Get Exit Point Roaster",
                "responses": {
                    "200": {
                        "description": "Exit point roaster",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error response",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/exit/point/{id}": {
            "get": {
                "description": "Retrieve an exit point by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "exit_points"
                ],
                "summary": "Get exit point by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Exit Point ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ExitPointResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/exit/points": {
            "get": {
                "description": "Retrieve a list of exit points with pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "exit_points"
                ],
                "summary": "Get exit points with pagination",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page ID",
                        "name": "page_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page Size",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/api.ExitPointResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update exit point details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "exit_points"
                ],
                "summary": "Update exit point details",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.UpdateExitPointRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ExitPointResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new exit point",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "exit_points"
                ],
                "summary": "Create a new exit point",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.CreateExitPointRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ExitPointResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/exit/points/list": {
            "get": {
                "description": "List exit points with pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "exit_points"
                ],
                "summary": "List exit points with pagination",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page ID",
                        "name": "page_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page Size",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/api.ExitPointResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/export/companies": {
            "get": {
                "description": "Retrieves a list of export companies",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get Export Companies",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page ID",
                        "name": "page_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page Size",
                        "name": "page_size",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.ExportCompanyResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates export company details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update Export Company",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Export company ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Export company details to update",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.UpdateExportCompanyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/api.ExportCompanyResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "404": {
                        "description": "Export company not found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new export company and user in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create Export Company",
                "parameters": [
                    {
                        "description": "Export Company details",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.ExportCompanyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/export/farmer/codes": {
            "get": {
                "description": "Exports traceability codes of farmers to an Excel file",
                "produces": [
                    "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
                ],
                "summary": "Export farmer traceability codes",
                "operationId": "exportFarmerTraceabilityCodes",
                "responses": {
                    "200": {
                        "description": "File with farmer traceability codes",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/export/registration/statuses": {
            "get": {
                "description": "Retrieves a list of export registration statuses",
                "summary": "Export Registration Statuses",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/api.RegStatuses"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/exportcompany/orders/{id}": {
            "get": {
                "description": "Retrieves orders associated with an export company",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get Export Company Orders",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Export company ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.ReturnOrderByExportCompanyRow"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/exporter/consignment/{id}": {
            "get": {
                "description": "Retrieves details of a specific planned consignment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get Planned Consignment Details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Planned consignment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/api.PlannedConsignmentDetailsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "404": {
                        "description": "Planned consignment not found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/exporter/dashboard/stats/{id}": {
            "get": {
                "description": "Retrieves statistics for a dashboard associated with a specific session for an exporter",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve dashboard statistics for exporter",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/exporter/farmers": {
            "get": {
                "description": "Retrieves details of all farmers associated with a specific export company",
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve all farmers for an export company",
                "operationId": "allExporterFarmers",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Export Company ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "additionalProperties": true
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/exporter/farmers/list": {
            "get": {
                "description": "Retrieves details of farmers associated with a specific export company with pagination",
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve paginated farmers for an export company",
                "operationId": "farmersForExporters",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Export Company ID",
                        "name": "exportcompany_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page ID",
                        "name": "page_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page Size",
                        "name": "page_size",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "additionalProperties": true
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/exporter/packhouses/{session_id}": {
            "get": {
                "description": "Get packhouses associated with an exporter",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get Exporter Packhouses",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "session_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.PackhouseList"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/exporter/user/stats/{id}": {
            "get": {
                "description": "Export statistics of a user session",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Stats"
                ],
                "summary": "Export user statistics",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "session_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/farmer/farms/{id}": {
            "get": {
                "description": "Retrieve farms for a farmer by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve farms for a farmer",
                "operationId": "getFarmerFarms",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the farmer",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/farmer/produce/{id}": {
            "get": {
                "description": "Retrieves produce for a farmer by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get farmer produce",
                "operationId": "getFarmerProduce",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the farmer",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/api.FarmerProduce"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Farmer not found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/farmer/{id}": {
            "get": {
                "description": "Retrieve farmer traceability data by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve farmer traceability data",
                "operationId": "getFarmerTraceability",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Farmer Traceability ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/api.FarmerTypeTraceability"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "404": {
                        "description": "Farmer Traceability not found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/farmers": {
            "get": {
                "description": "Retrieve farmer traceability data with pagination",
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve farmer traceability data",
                "operationId": "getFarmerTraceabilities",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page ID",
                        "name": "page_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page Size",
                        "name": "page_size",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/api.FarmerTypeTraceability"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update farmer traceability data by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update farmer traceability data",
                "operationId": "updateFarmerTraceability",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Farmer ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "404": {
                        "description": "Farmer not found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/farmers/count": {
            "get": {
                "description": "Get the count of farmers based on their status",
                "produces": [
                    "application/json"
                ],
                "summary": "Get farmer counts",
                "operationId": "farmerCount",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/api.FarmerCountRes"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/farmers/exporter/count/{id}": {
            "get": {
                "description": "Retrieves count of active, inactive, and suspended farmers associated with an exporter",
                "summary": "Get Farmer Exporter Count",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/api.ExporterFarmerCountResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "404": {
                        "description": "Session not found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/fetch/accepted/consigments": {
            "get": {
                "description": "Retrieves accepted planned consignments based on session ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get Accepted Planned Consignments",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.PlannedConsignmentReponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/fetch/all/consignments": {
            "get": {
                "description": "Retrieves all planned consignments based on status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get All Planned Consignments",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "session_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Comma-separated list of statuses",
                        "name": "status",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page ID",
                        "name": "page_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.PlannedConsignmentDetailsResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/fetch/awaiting/consigments": {
            "get": {
                "description": "Retrieves awaiting planned consignments based on session ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get Awaiting Planned Consignments",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.PlannedConsignmentReponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/fetch/awaiting/exit/consigments/{id}": {
            "get": {
                "description": "Retrieves awaiting consignments by exit point based on session ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get Awaiting Consignments By Exit Point",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.PlannedConsignmentReponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "404": {
                        "description": "Session not found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/fetch/awaiting/exit/consignments": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Endpoint to get awaiting border consignments.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BorderInspection"
                ],
                "summary": "Get Awaiting Border Consignments",
                "responses": {
                    "200": {
                        "description": "List of awaiting border consignments",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.ExitConsignmentResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error response",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/fetch/boarder/consignments": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Endpoint to fetch all border consignments by status.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BorderInspection"
                ],
                "summary": "Fetch All Border Consignments",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page ID",
                        "name": "page_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page Size",
                        "name": "page_size",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Status",
                        "name": "status",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of border consignments",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.ExitConsignmentResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request response",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error response",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/fetch/company/logo/{id}": {
            "get": {
                "description": "Retrieves company logo",
                "summary": "Fetch Company Logo",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Export company ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/fetch/completed/boarder/consignments": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Endpoint to get completed border consignments.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BorderInspection"
                ],
                "summary": "Get Completed Border Consignments",
                "responses": {
                    "200": {
                        "description": "List of completed border consignments",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.ExitConsignmentResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error response",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/fetch/completed/consigments": {
            "get": {
                "description": "Retrieves completed planned consignments",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get Completed Planned Consignments",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "session_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.PlannedConsignmentReponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/fetch/count/inspections/{id}": {
            "get": {
                "description": "Retrieves the count of completed inspections for an exporter",
                "summary": "Fetch Completed Count Inspections",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/api.FetchCompletedCountInspectionsRes"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "404": {
                        "description": "Session not found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/fetch/exporter/stamp/{id}": {
            "get": {
                "description": "Fetch the stamp of an exporter by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Exporter Stamp"
                ],
                "summary": "Fetch exporter stamp",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Exporter ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/fetch/farmers": {
            "get": {
                "description": "Retrieves details of all farmers",
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve all farmers",
                "operationId": "getAllFarmers",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "additionalProperties": true
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/fetch/planned/consigments/documents/{id}": {
            "get": {
                "description": "Retrieves documents related to a planned consignment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get Planned Consignment Documents",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Planned consignment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/api.CustomDocResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/fetch/queried/consigments": {
            "get": {
                "description": "Retrieves queried planned consignments based on status and session ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get Queried Planned Consignments",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.PlannedConsignmentReponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/fetch/reception/attributes/{id}": {
            "get": {
                "description": "Fetches reception attributes by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ReceptionForms"
                ],
                "summary": "Fetch Reception Attributes",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Attributes ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/fetch/reception/documents/{id}": {
            "get": {
                "description": "Fetches reception documents by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ReceptionForms"
                ],
                "summary": "Fetch Reception Documents",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Document ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/fetch/red/flags": {
            "get": {
                "description": "Retrieves red flags based on status and pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Fetch Red Flags",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page ID",
                        "name": "page_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page Size",
                        "name": "page_size",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Status",
                        "name": "status",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/api.FetchRedFlagsRow"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/fetch/rejected/consigments": {
            "get": {
                "description": "Retrieves queried planned consignments based on status and session ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get Queried Planned Consignments",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.PlannedConsignmentReponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/fetch/stopped/consignments": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Endpoint to get stopped consignments.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BorderInspection"
                ],
                "summary": "Get Stopped Consignments",
                "responses": {
                    "200": {
                        "description": "List of stopped consignments",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.ExitConsignmentResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error response",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/filter/exportcompany/clients": {
            "post": {
                "description": "Filter clients associated with the specified session ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "clients"
                ],
                "summary": "Filter clients by session ID",
                "parameters": [
                    {
                        "description": "Filter client request payload",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.FilterClientRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.ClientResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/filter/exportcompany/orders": {
            "get": {
                "description": "Retrieves orders of a specific export company based on provided filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Filter Export Company Orders",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "session_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Order Status",
                        "name": "status",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.OrderListResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/filter/qcp1/attributes": {
            "get": {
                "description": "Filters QCP1 quality attributes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Filter QCP1 Attributes",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/filter/qcp2/attributes": {
            "get": {
                "description": "Filters QCP2 attributes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Filter QCP2 Attributes",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/filter/qcp3/attributes": {
            "get": {
                "description": "Retrieves a list of QCP3 quality attributes based on filtering criteria",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "QualityControl"
                ],
                "summary": "Filter QCP3 Quality Attributes",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.QualityattributeResType"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/filter/reception/attributes": {
            "get": {
                "description": "Filter reception attributes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ReceptionForms"
                ],
                "summary": "Filter Reception Attributes",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/generate/farmer/code/{FarmerID}/{CropID}/{DistrictID}": {
            "get": {
                "description": "Generates a unique farmer code based on the provided IDs",
                "produces": [
                    "application/json"
                ],
                "summary": "Generate farmer code",
                "operationId": "generateFarmerCode",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Farmer ID",
                        "name": "FarmerID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Crop ID",
                        "name": "CropID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "District ID",
                        "name": "DistrictID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Context",
                        "name": "ctx",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/gin.Context"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Generated farmer code",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/get-exact-file": {
            "get": {
                "description": "Retrieves the exact file content based on the provided path",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get Exact File",
                "parameters": [
                    {
                        "type": "string",
                        "description": "File path",
                        "name": "path",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "File content",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/import/admin/units": {
            "post": {
                "description": "Import administrative units in bulk from a CSV file",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin_units"
                ],
                "summary": "Import administrative units",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Districts CSV file",
                        "name": "districts",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/import/bulk/farmers": {
            "post": {
                "description": "Bulk imports farmers from a CSV file",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Bulk import farmers",
                "operationId": "bulkFarmerImport",
                "parameters": [
                    {
                        "type": "file",
                        "description": "CSV file with farmers data",
                        "name": "farmers",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable entity",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/import/countries": {
            "post": {
                "description": "Imports countries from a CSV file",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "country"
                ],
                "summary": "Import countries from CSV file",
                "parameters": [
                    {
                        "type": "file",
                        "description": "CSV file containing countries",
                        "name": "countries",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/import/crops": {
            "post": {
                "description": "Imports crops from a CSV file",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "crops"
                ],
                "summary": "Import crops",
                "parameters": [
                    {
                        "type": "file",
                        "description": "CSV file containing crops data",
                        "name": "crops",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/import/dial/codes": {
            "post": {
                "description": "Imports dial codes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dialcode"
                ],
                "summary": "Import dial codes",
                "parameters": [
                    {
                        "description": "Dial Codes to import",
                        "name": "dialcodes",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.DialImportRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/import/districts": {
            "post": {
                "description": "Imports districts in bulk from a CSV file",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "districts"
                ],
                "summary": "Import districts",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Districts CSV file",
                        "name": "districts",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/import/exit/handlers": {
            "post": {
                "description": "Import exit handlers from a CSV file",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "exit_handlers"
                ],
                "summary": "Import exit handlers from CSV",
                "parameters": [
                    {
                        "type": "file",
                        "description": "CSV file containing exit handlers",
                        "name": "exithandlers",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/import/exit/points": {
            "post": {
                "description": "Import exit points from CSV file",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "exit_points"
                ],
                "summary": "Import exit points from CSV",
                "parameters": [
                    {
                        "type": "file",
                        "description": "CSV file containing exit points",
                        "name": "exitpoints",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/import/parishes": {
            "post": {
                "description": "Import parishes from a CSV file",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Import Parishes",
                "parameters": [
                    {
                        "type": "file",
                        "description": "CSV file containing parishes data",
                        "name": "parishes",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Parishes imported successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable entity",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/import/quality/attributes": {
            "post": {
                "description": "Import quality attributes from a CSV file",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Import quality attributes from a CSV file",
                "operationId": "import-quality-attributes",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Quality Attributes CSV File",
                        "name": "qualityattributes",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.QualityTypeAttribute"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/import/subcounties": {
            "post": {
                "description": "Import multiple subcounties by uploading a CSV file",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Subcounty"
                ],
                "summary": "Import subcounties from a CSV file",
                "parameters": [
                    {
                        "type": "file",
                        "description": "CSV file with subcounty data",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/import/transport/modes": {
            "post": {
                "description": "Import bulk modes of transport from a CSV file",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Import bulk modes of transport",
                "operationId": "importBulkModesoftransport",
                "parameters": [
                    {
                        "type": "file",
                        "description": "CSV file containing modes of transport",
                        "name": "modesoftransport",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully imported modes of transport",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.Mot"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "422": {
                        "description": "Bad file format",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/import/villages": {
            "post": {
                "description": "Imports a list of villages from a CSV file",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Villages"
                ],
                "summary": "Import Villages",
                "parameters": [
                    {
                        "type": "file",
                        "description": "CSV file containing village data",
                        "name": "villages",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Villages Imported Successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/import/zones": {
            "post": {
                "description": "Import zones from a CSV file",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Zone"
                ],
                "summary": "Import Zones",
                "parameters": [
                    {
                        "type": "file",
                        "description": "CSV file containing zones",
                        "name": "zones",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/inactive/order/crops/{id}": {
            "get": {
                "description": "Retrieves orders of a specific export company based on provided filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Filter Export Company Orders",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "session_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Order Status",
                        "name": "status",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/api.OrderListResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/inspection/recommendation/{id}": {
            "get": {
                "description": "Get inspection recommendations by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get inspection recommendations",
                "operationId": "get-inspection-recommendation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Inspection recommendation ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/inspection/regimes/{id}": {
            "get": {
                "description": "Retrieves inspection regimes based on the provided request data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Inspection Regimes"
                ],
                "summary": "Retrieve inspection regimes",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Context",
                        "name": "ctx",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.QCPListsType"
                        }
                    }
                }
            }
        },
        "/inspection/report/{id}": {
            "get": {
                "description": "Get an inspection report by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "report"
                ],
                "summary": "Get an inspection report",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Inspection Report ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ReportTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/inspector/companies/{id}": {
            "get": {
                "description": "Retrieves the companies associated with a Packhouse Inspector.",
                "tags": [
                    "Inspectors"
                ],
                "summary": "Get Inspector Companies",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Inspector ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of companies",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/api.CompanyRes"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/inspector/stamps": {
            "get": {
                "description": "Get inspector stamps",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Inspector"
                ],
                "summary": "Get inspector stamps",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.SuccessTypeResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/inspector/{id}": {
            "get": {
                "description": "Gets a packhouse inspector",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get Packhouse Inspector",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Inspector ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/api.UserResType"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/intercept/other/product": {
            "post": {
                "description": "Intercepts other product",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Intercept Other Product",
                "parameters": [
                    {
                        "type": "number",
                        "name": "box_weight",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "consignment_no",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "exportcompany_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "notes",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "product_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "qcp5_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "qcp5_row_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "reason",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "recommendationaction",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "number",
                        "name": "weight_rejected",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/intercept/product": {
            "post": {
                "description": "Intercepts product",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Intercept Product",
                "parameters": [
                    {
                        "type": "number",
                        "name": "box_weight",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "consignment_no",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "exportcompany_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "notes",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "product_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "qcp5_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "qcp5_row_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "reason",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "recommendationaction",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "traceability_code",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "number",
                        "name": "weight_rejected",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/interception/notice/{id}": {
            "get": {
                "description": "Retrieves interception notice per consignment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Interception Notice Per Consignment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Consignment Number",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/issue/red/flag": {
            "post": {
                "description": "Issues a red flag based on the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Issue Red Flag",
                "parameters": [
                    {
                        "description": "Red flag issue details",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.RedFlagReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/list/dcic/admin": {
            "get": {
                "description": "Lists DCIC admins",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "List DCIC Admins",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page ID",
                        "name": "page_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page Size",
                        "name": "page_size",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/list/document/configs": {
            "get": {
                "description": "Retrieve a list of document configurations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "documents"
                ],
                "summary": "List document configurations",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.AllDocumentDetailsRow"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/list/export/order/packing/list": {
            "get": {
                "description": "Lists pending order packing lists",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "List Pending Order Packing Lists",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Order ID",
                        "name": "order_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page ID",
                        "name": "page_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page Size",
                        "name": "page_size",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Status",
                        "name": "status",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.PackinglistResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/list/export/packing/list": {
            "get": {
                "description": "Lists pending packing lists",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "List Pending Packing Lists",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "session_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page ID",
                        "name": "page_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page Size",
                        "name": "page_size",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Status",
                        "name": "status",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.PackinglistResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "404": {
                        "description": "Session not found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/list/exporter/admin": {
            "get": {
                "description": "List exporter admins",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Exporter"
                ],
                "summary": "List exporter admins",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page ID",
                        "name": "page_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page Size",
                        "name": "page_size",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "session_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/list/exporter/consignments": {
            "get": {
                "description": "Retrieves planned consignments based on status and session ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get Planned Consignments",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Comma-separated list of statuses",
                        "name": "status",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/list/exporter/farmers/list": {
            "get": {
                "description": "Retrieves details of farmers associated with a specific export company with pagination and status filter",
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve paginated farmers for an export company with a specific status",
                "operationId": "listFarmersForExporters",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Export Company ID",
                        "name": "exportcompany_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page ID",
                        "name": "page_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page Size",
                        "name": "page_size",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Status",
                        "name": "status",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "additionalProperties": true
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/list/exporter/order/qcp1s": {
            "get": {
                "description": "Lists all exporter order quality control point ones",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "List all exporter order quality control point ones",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page Size",
                        "name": "page_size",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page ID",
                        "name": "page_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Order ID",
                        "name": "order_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Status",
                        "name": "status",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.Qcp1Response"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/list/exporter/order/qcp2s": {
            "get": {
                "description": "Fetches the list of QCP2s by order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "List QCP2s by Order",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page size",
                        "name": "page_size",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page ID",
                        "name": "page_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Order ID",
                        "name": "order_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Status",
                        "name": "status",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.Qcp2Response"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/list/exporter/pending/order/qcp3s": {
            "get": {
                "description": "Lists QCP3 order checks based on status and order ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "List QCP3 Order Checks",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Order ID",
                        "name": "order_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Status",
                        "name": "status",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page ID",
                        "name": "page_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page Size",
                        "name": "page_size",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.Qcp3Response"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/list/exporter/pending/qcp2s": {
            "get": {
                "description": "Fetches the list of pending QCP2s",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "List Pending QCP2s",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page size",
                        "name": "page_size",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page ID",
                        "name": "page_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "session_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.Qcp2Response"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/list/exporter/pending/qcp3s": {
            "get": {
                "description": "Lists QCP3 checks based on status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "List QCP3 Checks",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "session_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Status",
                        "name": "status",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page ID",
                        "name": "page_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page Size",
                        "name": "page_size",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.Qcp3Response"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/list/exporter/qcp1s": {
            "get": {
                "description": "Lists all exporter quality control point ones",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "List all exporter quality control point ones",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page Size",
                        "name": "page_size",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page ID",
                        "name": "page_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "session_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Status",
                        "name": "status",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.Qcp1Response"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/list/exporter/qcp2s": {
            "get": {
                "description": "Fetches the list of QCP2s",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "List QCP2s",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page size",
                        "name": "page_size",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page ID",
                        "name": "page_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "session_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Status",
                        "name": "status",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.Qcp2Response"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/list/exporter/receptionforms": {
            "get": {
                "description": "List reception forms based on exporter session ID and status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ReceptionForms"
                ],
                "summary": "List Reception Forms",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Exporter session ID",
                        "name": "session_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page ID",
                        "name": "page_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page size",
                        "name": "page_size",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Comma-separated list of statuses",
                        "name": "status",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/list/pending/qcp4s": {
            "get": {
                "description": "List QCP4 inspections based on session ID, page ID, and page size",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "List QCP4 Inspections",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "session_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page ID",
                        "name": "page_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page Size",
                        "name": "page_size",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/api.ListPendingQcp4sRowType"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/list/pending/qcp5s": {
            "get": {
                "description": "Endpoint to list pending QCP5 inspections based on session ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "QCP5"
                ],
                "summary": "List Pending QCP5s",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "session_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page ID",
                        "name": "page_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page Size",
                        "name": "page_size",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of pending QCP5 inspections",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.ListPendingQcp5sRowType"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/list/super/admin": {
            "get": {
                "description": "Lists super admins",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "List Super Admins",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page ID",
                        "name": "page_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page Size",
                        "name": "page_size",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/list/trucks/consignment/{id}": {
            "get": {
                "description": "Get trucks per consignment by consignment number",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get trucks per consignment",
                "operationId": "get-trucks-per-consignment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Consignment number",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/list/user/export/companies": {
            "get": {
                "description": "Get export companies associated with a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Export Companies"
                ],
                "summary": "Get user's export companies",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "export_company",
                        "in": "query",
                        "required": true
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "user_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Logs in User in the database.",
                "produces": [
                    "application/json"
                ],
                "summary": "Logs in User in the database",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/notifications": {
            "post": {
                "description": "Send notifications",
                "tags": [
                    "Notifications"
                ],
                "summary": "Send notifications",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Phone",
                        "name": "phone",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Message",
                        "name": "message",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Notification sent",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/nppo/inspectors": {
            "get": {
                "description": "Return a paginated list of NPPO inspectors",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NPPO"
                ],
                "summary": "Return Paginated NPPO Inspectors",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page ID",
                        "name": "page_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page Size",
                        "name": "page_size",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "session_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.UserResType"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/nppos/list": {
            "get": {
                "description": "Return a paginated list of NPPO inspectors",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NPPO"
                ],
                "summary": "Return Paginated NPPO Inspectors",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page ID",
                        "name": "page_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page Size",
                        "name": "page_size",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "session_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.UserResType"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/order/weight": {
            "post": {
                "description": "Updates the weight of a crop on a specific order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update Weight on Crop",
                "parameters": [
                    {
                        "description": "Update weight request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.UpdateOrderWeightReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/orders": {
            "get": {
                "description": "Retrieves a list of orders based on provided filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "List Orders",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page ID",
                        "name": "page_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page Size",
                        "name": "page_size",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "session_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Order Status",
                        "name": "status",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/api.OrderListResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "404": {
                        "description": "Session not found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create Order",
                "parameters": [
                    {
                        "description": "Order details to create",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.OrderRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/api.OrderRes"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "403": {
                        "description": "Unique violation",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/orders/stats/{id}": {
            "get": {
                "description": "Retrieves statistics for orders associated with a specific session",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve order statistics",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/orders/{id}": {
            "get": {
                "description": "Retrieves an order by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get Order",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Order ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/other/product/list/{id}": {
            "post": {
                "description": "Deletes other packing list details by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete Other Packing List",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Packing List ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/pack/house/{id}": {
            "get": {
                "description": "Get details of a packhouse by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get Packhouse",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Packhouse ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/api.PackHouseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "404": {
                        "description": "Packhouse not found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/pack/houses": {
            "get": {
                "description": "Get a list of packhouses",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get Packhouses",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page ID",
                        "name": "page_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page Size",
                        "name": "page_size",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.PackHouseResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates a packhouse",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update Packhouse",
                "parameters": [
                    {
                        "description": "Packhouse details to update",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.UpdatePackHouseRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/api.PackHouseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "404": {
                        "description": "Packhouse not found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new packhouse",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create Packhouse",
                "parameters": [
                    {
                        "description": "Packhouse details to create",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.PackHouseRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/api.PackHouseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "403": {
                        "description": "Packhouse already exists",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/package/type/{id}": {
            "get": {
                "description": "Retrieves details of a specific package type",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve package type details",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Package Type ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/package/types": {
            "get": {
                "description": "Retrieves a list of package types with pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve package types with pagination",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page ID",
                        "name": "page_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page Size",
                        "name": "page_size",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates package type details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update Package Type",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Package type ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Package type details to update",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.UpdatePackageTypeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "404": {
                        "description": "Package type not found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new package type",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create Package Type",
                "parameters": [
                    {
                        "description": "Package type request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.PackageTypeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/packhouse/count": {
            "get": {
                "description": "Retrieves counts of active, inactive, and suspended packhouses",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get Packhouse Count",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/packhouse/inspector/{id}": {
            "get": {
                "description": "Retrieves the details of a Packhouse Inspector by ID.",
                "tags": [
                    "Inspectors"
                ],
                "summary": "Get Packhouse Inspector by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Inspector ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Inspector details",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/packhouses": {
            "get": {
                "description": "Get details of all packhouses",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get All Packhouses",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/api.PackhouseList"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/packing/batch/list/{id}": {
            "get": {
                "description": "Returns packing list batch",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Return Packing List Batch",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Batch ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/packing/list/boxes/{id}": {
            "get": {
                "description": "Retrieves packing list boxes per pack list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get Packing List Boxes",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Packing list ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/packing/list/details/{id}": {
            "get": {
                "description": "Retrieves packing list details by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get Packing List Details",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Packing List ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/api.PackinglistDetailsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "404": {
                        "description": "Packing list not found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/packing/list/report/{id}": {
            "get": {
                "description": "Generates packinglist report",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Generate Packinglist Report",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Packinglist ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/packing/list/{id}": {
            "get": {
                "description": "Retrieves packing list details by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get Packing List",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Packing List ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/api.PackinglistResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "404": {
                        "description": "Packing list not found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/packinglist/per/consignment/{id}": {
            "get": {
                "description": "Updates weight to the same box weight",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update Weight to Same Box Weight",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Export company ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/packinglist/update/weight": {
            "put": {
                "description": "Updates the weight details for boxes in the same packing list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Packing List"
                ],
                "summary": "Update Weight for Same Box Weight",
                "parameters": [
                    {
                        "description": "Packing List Batch Request",
                        "name": "packinglist",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.PackBatchReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/parish/sub/county/{id}": {
            "get": {
                "description": "Get all parishes for a specific subcounty",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Subcounty"
                ],
                "summary": "Get parishes by subcounty ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Subcounty ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.ParishTypeRes"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/parishes": {
            "put": {
                "description": "Update an existing parish",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update Parish",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Parish ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Parish details",
                        "name": "parish",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.UpdateParishReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated parish details",
                        "schema": {
                            "$ref": "#/definitions/api.Parish"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/parishes/create": {
            "post": {
                "description": "Create a new parish",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create Parish",
                "parameters": [
                    {
                        "description": "Parish details",
                        "name": "parish",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.ParishCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Parish created successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/parishes/{id}": {
            "get": {
                "description": "Retrieve a parish by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get Parish",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Parish ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Parish details",
                        "schema": {
                            "$ref": "#/definitions/api.Parish"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/path": {
            "get": {
                "description": "Retrieves a file based on the provided path",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "summary": "Get File",
                "parameters": [
                    {
                        "type": "string",
                        "description": "File path",
                        "name": "path",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/phytocertificate/consignment/{id}": {
            "get": {
                "description": "Get phyto certificate by consignment number",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get phyto certificate",
                "operationId": "get-phyto-certificate",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Consignment number",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/product/doc/type/{id}": {
            "get": {
                "description": "Retrieves a product document type by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get a product document type by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Product document type ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/api.ProductDocumentTypeRes"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "404": {
                        "description": "Product document type not found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/product/doc/types": {
            "get": {
                "description": "Retrieves a list of product document types",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get a list of product document types",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page ID",
                        "name": "page_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page Size",
                        "name": "page_size",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.ProductDocumentTypeRes"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates a product document type",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a product document type",
                "parameters": [
                    {
                        "description": "Product document type details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.UpdateProductDocumentTypeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/api.ProductDocumentTypeRes"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "404": {
                        "description": "Product document type not found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new product document type",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create a product document type",
                "parameters": [
                    {
                        "description": "Product document type details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.ProductDocTypeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/api.ProductDocumentTypeRes"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "403": {
                        "description": "Document Type Already Exists",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/qcp/by/email": {
            "post": {
                "description": "Retrieves QCP details by email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get QCP by Email",
                "parameters": [
                    {
                        "description": "Email",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.QcpReqEmail"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/api.QcpEmailResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/qcp1": {
            "post": {
                "description": "Creates a new quality control point one",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create quality control point one",
                "parameters": [
                    {
                        "description": "Quality control point one details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.Qcp1Request"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/db.Qcp1"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/qcp1/qrcodes/{id}": {
            "get": {
                "description": "Retrieves QCP1 QR codes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get QCP1 QR Codes",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "QCP1 ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/api.Qcp1QrCodes"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/qcp1/recommendation/{id}": {
            "get": {
                "description": "Retrieves QCP1 recommendation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get Recommendation QCP1",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Recommendation ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/api.Qcp1RecommendationType"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/qcp1/recommendations": {
            "post": {
                "description": "Creates QCP1 recommendations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create QCP1 recommendations",
                "parameters": [
                    {
                        "description": "QCP1 recommendations details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.QCP1RecommendationsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/qcp1/report/{id}": {
            "get": {
                "description": "Retrieves QCP1 report",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get QCP1 Report",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "QCP1 ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/qcp1/{id}": {
            "get": {
                "description": "Retrieves QCP1 details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get QCP1",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "QCP1 ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/qcp1s/attributes": {
            "post": {
                "description": "Creates quality control point one attributes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create quality control point one attributes",
                "parameters": [
                    {
                        "description": "Quality control point one attributes",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.Qcp1Req"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/qcp2/full/details/{id}": {
            "get": {
                "description": "Generates a report for a specific QCP2",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Generate QCP2 Report",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "QCP2 ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/qcp2/handle/attributes": {
            "post": {
                "description": "Handles creation or update of QCP2 attributes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Handle QCP2 Attributes",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "QCP2 ID",
                        "name": "qcp2_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "QCP2 attributes details",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.Qcp2AttributesRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/qcp2/recommendation/{id}": {
            "get": {
                "description": "Fetches recommendation for a specific QCP2",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get QCP2 Recommendation",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "QCP2 ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/qcp2/{id}": {
            "get": {
                "description": "Fetches details of a specific QCP2",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get QCP2 Details",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "QCP2 ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/qcp3/full/details/{id}": {
            "get": {
                "description": "Generates a report for a QCP3 check",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Generate QCP3 Report",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "QCP3 ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/qcp3/handle/attributes": {
            "post": {
                "description": "Handles creation and update of QCP3 attributes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Handle QCP3 Attributes",
                "parameters": [
                    {
                        "description": "QCP3 attributes details",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.QCP3AttributesRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/qcp3/recommendation/{id}": {
            "get": {
                "description": "Retrieves recommendation for a QCP3 check",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get Recommendation for QCP3",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "QCP3 ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/api.Qcp3RecommendationResType"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/qcp3/{id}": {
            "get": {
                "description": "Retrieves details of a QCP3 check",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get QCP3 Details",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "QCP3 ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "404": {
                        "description": "QCP3 not found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/qcp4/all/details/{id}": {
            "get": {
                "description": "Retrieve detailed information for QCP4 including recommendations, attributes, products, and others",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "QCP4"
                ],
                "summary": "Get QCP4 Details",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "QCP4 ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/api.Qcp4DetailsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/qcp4/full/report/{id}": {
            "get": {
                "description": "Retrieves filtered QCP4 reports based on the provided QCP4 ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "QCP4"
                ],
                "summary": "Filter QCP4 reports",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "QCP4 ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Filtered QCP4 reports",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/qcp4/inspection": {
            "post": {
                "description": "Perform QCP4 inspection and update related data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Perform QCP4 Inspection",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "session_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/qcp4/other/inspection": {
            "post": {
                "description": "Perform QCP4 inspection for other products and update related data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Perform QCP4 Inspection for Other Products",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "session_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/qcp4/report/{id}": {
            "get": {
                "description": "Retrieves QCP4 report based on the provided QCP4 ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "QCP4"
                ],
                "summary": "Get QCP4 report",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "QCP4 ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "QCP4 report data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/qcp4s/consignment": {
            "get": {
                "description": "Get QCP4 inspections per consignment based on session ID and consignment number",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get QCP4 Inspections per Consignment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Consignment Number",
                        "name": "consignment_no",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "session_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/api.ConsignmentResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/qcp4s/list/consignment/{id}": {
            "get": {
                "description": "Retrieves QCP4 lists per consignment based on consignment ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "QCP4 Lists"
                ],
                "summary": "Retrieve QCP4 lists per consignment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Context",
                        "name": "ctx",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "QCP4 lists per consignment",
                        "schema": {
                            "$ref": "#/definitions/api.ConsignmentResponse"
                        }
                    }
                }
            }
        },
        "/qcp5/all/details/{id}": {
            "get": {
                "description": "Endpoint to retrieve details of a specific QCP5 inspection.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "QCP5"
                ],
                "summary": "Get QCP5 Details",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "QCP5 ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "QCP5 details",
                        "schema": {
                            "$ref": "#/definitions/api.Qcp5DetailsTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/qcp5/full/report/{id}": {
            "get": {
                "description": "Filter Quality Control Process 5 (QCP5) reports based on QCP5 ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Filter QCP5 reports",
                "operationId": "filter-qcp5-reports",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "QCP5 ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns filtered QCP5 reports",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/qcp5/inspection/report/{id}": {
            "get": {
                "description": "Retrieve inspection report for a given consignment ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get QCP5 inspection report",
                "operationId": "get-qcp5-inspection-report",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Consignment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns QCP5 inspection report",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Endpoint to perform QCP5 inspection and update various attributes in the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "QCP5"
                ],
                "summary": "Perform QCP5 Inspection",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization token",
                        "name": "authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Request body containing QCP5 inspection details",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.Qcp5InspectionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/qcp5/other/inspection": {
            "post": {
                "description": "Endpoint to perform QCP5 inspection for other products and update various attributes in the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "QCP5"
                ],
                "summary": "Perform QCP5 Inspection for other products",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization token",
                        "name": "authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Request body containing QCP5 inspection details for other products",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.Qcp5OtherInspectionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/qcp5s/consignment": {
            "get": {
                "description": "Endpoint to retrieve QCP5s for a specific consignment.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "QCP5"
                ],
                "summary": "Get QCP5s per Consignment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Consignment number",
                        "name": "consignment_no",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "QCP5s per consignment",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/quality/attribute/:id": {
            "put": {
                "description": "Update a quality attribute with the given details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a quality attribute",
                "operationId": "update-quality-attribute",
                "parameters": [
                    {
                        "description": "Update Quality Attribute Request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.UpdateQualityAttributeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.QualityTypeAttribute"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/quality/attribute/{id}": {
            "get": {
                "description": "Get a quality attribute by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get a quality attribute by ID",
                "operationId": "get-quality-attribute",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Quality Attribute ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.QualityTypeAttribute"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/quality/attributes": {
            "get": {
                "description": "Get all quality attributes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get all quality attributes",
                "operationId": "get-all-quality-attributes",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.QualityTypeAttribute"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Store a new quality attribute with the given details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Store a new quality attribute",
                "operationId": "store-quality-attribute",
                "parameters": [
                    {
                        "description": "Quality Attribute Request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.QualityAttributeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.QualityTypeAttribute"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/quality/controller/list/{id}": {
            "get": {
                "description": "Return a list of quality controllers per exporter",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "QualityController"
                ],
                "summary": "Return Quality Controllers per Exporter",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Exporter ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.UserResType"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/reason/rejection/{id}": {
            "get": {
                "description": "Get a reason for rejection by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get a reason for rejection by ID",
                "operationId": "get-reason-rejection",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Reason Rejection ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ReasonTyperejection"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/reason/rejections": {
            "get": {
                "description": "Get all reasons for rejection",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get all reasons for rejection",
                "operationId": "get-all-reasons-rejection",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.ReasonTyperejection"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a reason for rejection with the given details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a reason for rejection",
                "operationId": "update-reason-rejection",
                "parameters": [
                    {
                        "description": "Update Reason Rejection Request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.UpdateReasonRejectionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ReasonTyperejection"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new reason for rejection with the given details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create a new reason for rejection",
                "operationId": "create-reason-rejection",
                "parameters": [
                    {
                        "description": "Reason Rejection Request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.ReasonRejectionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ReasonTyperejection"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/reception/form/count": {
            "get": {
                "description": "Get counts of pending, submitted, and rejected reception forms",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get reception form counts",
                "operationId": "get-reception-form-counts",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "session_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/api.ReceptionCountType"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/reception/form/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Return reception details with the given ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Return reception details",
                "operationId": "return-reception-details",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Reception ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/reception/forms/{id}": {
            "get": {
                "description": "Get reception forms under consignment by order ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get reception forms under consignment",
                "operationId": "get-reception-forms-under-consignment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Order ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/reception/full/details/{id}": {
            "get": {
                "description": "Fetches full details of a reception",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ReceptionForms"
                ],
                "summary": "Reception Full Details",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Reception ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/reception/otherdocs/{id}": {
            "get": {
                "description": "Get other reception documents by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get other reception documents",
                "operationId": "get-other-reception-documents",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete other reception documents by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete other reception documents",
                "operationId": "delete-other-reception-documents",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/red/flags/count": {
            "get": {
                "description": "Retrieves counts of pending, approved, and denied red flags",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get Red Flag Counts",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/rejections": {
            "get": {
                "description": "Get a list of rejection reasons with pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rejections"
                ],
                "summary": "List rejection reasons",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page ID",
                        "name": "page_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page Size",
                        "name": "page_size",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.RejectionType"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing rejection reason by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rejections"
                ],
                "summary": "Update a rejection reason",
                "parameters": [
                    {
                        "description": "Update rejection request body",
                        "name": "UpdateRejectionRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.UpdateRejectionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RejectionType"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new rejection reason",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rejections"
                ],
                "summary": "Create a rejection reason",
                "parameters": [
                    {
                        "description": "Rejection request body",
                        "name": "RejectionRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.RejectionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RejectionType"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/rejections/{id}": {
            "get": {
                "description": "Get a specific rejection reason by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rejections"
                ],
                "summary": "Get a rejection reason",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Rejection ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RejectionType"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/remove/red/flag": {
            "post": {
                "description": "Removes a red flag",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Remove Red Flag",
                "parameters": [
                    {
                        "description": "Red flag removal details",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.RemoveRedFlags"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/reset/password/{token}": {
            "post": {
                "description": "Updates the password using the provided session ID.",
                "tags": [
                    "Authentication"
                ],
                "summary": "Update Password",
                "parameters": [
                    {
                        "description": "Update Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.UpdateReqLink"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Password updated successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/roles": {
            "get": {
                "description": "Get a paginated list of all roles",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roles"
                ],
                "summary": "List all roles",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page ID",
                        "name": "page_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page Size",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RoleRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new role with the specified name, description, and permissions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roles"
                ],
                "summary": "Create a new role",
                "parameters": [
                    {
                        "description": "Role data",
                        "name": "CreateRoleRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.CreateRoleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.CreateRoleRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/roles/permissions/{id}": {
            "get": {
                "description": "Get the permissions assigned to a specific role by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roles"
                ],
                "summary": "Get permissions for a role",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Role ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/roles/{id}": {
            "get": {
                "description": "Get the details of a specific role by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roles"
                ],
                "summary": "Get a role by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Role ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RoleRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/schedule/planning/form": {
            "post": {
                "description": "Schedules planning form",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Schedule Planning Form",
                "parameters": [
                    {
                        "description": "Planning details",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.PlanningRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/api.PlannedConsignmentResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/search/border/inspector": {
            "get": {
                "description": "Searches for a Border Inspector by name.",
                "tags": [
                    "Inspectors"
                ],
                "summary": "Search Border Inspector",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Inspector name",
                        "name": "inspector",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of inspectors",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.UserResType"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/search/crops": {
            "get": {
                "description": "Searches for crops by name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "crops"
                ],
                "summary": "Search crops by name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Crop name to search",
                        "name": "cropname",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/api.CropRes"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/search/exporter": {
            "get": {
                "description": "Retrieves exporter details by name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Search Exporter by Name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Exporter name to search for",
                        "name": "exporter",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.ExportTypeResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/search/farmer": {
            "get": {
                "description": "Searches and retrieves details of farmers by their name",
                "produces": [
                    "application/json"
                ],
                "summary": "Search farmers by name",
                "operationId": "searchFarmerName",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Farmer Name",
                        "name": "farmer_name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "additionalProperties": true
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/search/packhouse": {
            "get": {
                "description": "Retrieves packhouse details by name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Search Packhouse",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Packhouse name to search for",
                        "name": "packhouse",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.PackhouseTypeResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/search/packhouse/inspector": {
            "get": {
                "description": "Searches for a Packhouse Inspector by name.",
                "tags": [
                    "Inspectors"
                ],
                "summary": "Search Packhouse Inspector",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Inspector name",
                        "name": "inspector",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of inspectors",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.UserResType"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/search/quality/controller": {
            "get": {
                "description": "Searches for a Quality Controller by name.",
                "tags": [
                    "Quality Controllers"
                ],
                "summary": "Search Quality Controller",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Quality Controller name",
                        "name": "qualitycontroller",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of quality controllers",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.UserResType"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/search/zonal/inspector": {
            "get": {
                "description": "Searches for a Zonal Inspector by name.",
                "tags": [
                    "Inspectors"
                ],
                "summary": "Search Zonal Inspector",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Zonal Inspector name",
                        "name": "zonalinspector",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of zonal inspectors",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/send-reset-link": {
            "post": {
                "description": "Sends a password reset link to the user's email.",
                "tags": [
                    "Authentication"
                ],
                "summary": "Send Reset Link",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User Email",
                        "name": "email",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User Fullname",
                        "name": "fullname",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reset link sent successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Failed to send reset link",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/send/otp": {
            "post": {
                "description": "Send a one-time password to the farmer's phone",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Farmer OTP"
                ],
                "summary": "Send OTP to farmer",
                "parameters": [
                    {
                        "description": "Farmer phone number",
                        "name": "farmer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.FarmerOTP"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/send/reset/password/link": {
            "post": {
                "description": "Send a password reset link to the provided email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Reset Password",
                "parameters": [
                    {
                        "description": "Password Reset Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.PasswordReset"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/sendClientMails": {
            "post": {
                "description": "Sends emails to clients",
                "summary": "Send Client Mails",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Full name of the recipient",
                        "name": "fullname",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Email address of the recipient",
                        "name": "email",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Temporary password",
                        "name": "password",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User type",
                        "name": "usertype",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/server": {
            "post": {
                "description": "Creates a new server with the given configuration, store, and token maker",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Server"
                ],
                "summary": "Create a new server",
                "parameters": [
                    {
                        "description": "Configuration",
                        "name": "config",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/util.Config"
                        }
                    },
                    {
                        "description": "Database Store",
                        "name": "store",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.Store"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Server created successfully",
                        "schema": {
                            "$ref": "#/definitions/api.Server"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/setup-router": {
            "post": {
                "description": "Configures all routes for the server",
                "tags": [
                    "Server"
                ],
                "summary": "Set up server routes",
                "responses": {}
            }
        },
        "/show/packhouse/inpectors": {
            "get": {
                "description": "Lists inspectors",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "List Inspectors",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page ID",
                        "name": "page_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page Size",
                        "name": "page_size",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.UserResType"
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/show/quality/controllers": {
            "get": {
                "description": "Lists quality controllers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "List Quality Controllers",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "session_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.UserResType"
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/show/reception/documents/{id}": {
            "get": {
                "description": "Show details of reception documents",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Show reception documents",
                "operationId": "show-reception-documents",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Reception document ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/stamp-inspectors": {
            "get": {
                "description": "Retrieves the file paths of stamp inspectors from the specified folder",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Stamp Inspectors"
                ],
                "summary": "Retrieve stamp inspectors' file paths",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Context",
                        "name": "ctx",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "File paths of stamp inspectors",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    }
                }
            }
        },
        "/start": {
            "get": {
                "description": "Runs the HTTP server on a specified address",
                "tags": [
                    "Server"
                ],
                "summary": "Start the server",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Server address",
                        "name": "address",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Server started successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/store/consignment/documents": {
            "post": {
                "description": "Creates documents related to a consignment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create Consignment Documents",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Consignment number",
                        "name": "consignment_no",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Document ID",
                        "name": "document_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Consignment file",
                        "name": "consignmentfile",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/api.PlannedConsignmentDocumentResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/store/consignment/otherdocuments": {
            "post": {
                "description": "Creates other documents related to a consignment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create Consignment Other Docs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Consignment number",
                        "name": "consignment_no",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Description",
                        "name": "description",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Consignment other document",
                        "name": "repdoc",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/api.PlannedConsignmentOtherDocsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/store/consignment/transport/details": {
            "post": {
                "description": "Creates transport details of a consignment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create Consignment Transport Details",
                "parameters": [
                    {
                        "description": "Transport details of a consignment",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.ConsignmentTpDetails"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/api.ConsignmentTpDetailsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/store/document/details": {
            "post": {
                "description": "Create new documents with associated countries and crops in a transaction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "documents"
                ],
                "summary": "Create new documents",
                "parameters": [
                    {
                        "description": "Document data",
                        "name": "document",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.DocumentsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.AllDocumentDetailsRow"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/store/farmer/details": {
            "post": {
                "description": "Create a farmer transaction with contacts and farms data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create a farmer transaction",
                "operationId": "createFarmerTx",
                "parameters": [
                    {
                        "description": "Farmer transaction request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.FarmerTxRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/sub/counties": {
            "get": {
                "description": "Get a list of subcounties, optionally with pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Subcounty"
                ],
                "summary": "Get subcounties with pagination",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page ID",
                        "name": "page_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.subcountyRes"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update the details of an existing subcounty",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Subcounty"
                ],
                "summary": "Update a subcounty",
                "parameters": [
                    {
                        "description": "Updated subcounty details",
                        "name": "subcounty",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.UpdateSubcountyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.subcountyRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/sub/county/create": {
            "post": {
                "description": "Create a new subcounty with the given details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Subcounty"
                ],
                "summary": "Create a new subcounty",
                "parameters": [
                    {
                        "description": "Subcounty details",
                        "name": "subcounty",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.SubCountyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.subcountyRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/sub/county/{id}": {
            "get": {
                "description": "Get details of a specific subcounty by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Subcounty"
                ],
                "summary": "Get a subcounty by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Subcounty ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/submit/consignment": {
            "post": {
                "description": "Submits a consignment for processing",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Submit Consignment",
                "parameters": [
                    {
                        "description": "Submission request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.SubmissionReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/submit/reception/form": {
            "post": {
                "description": "Submit reception form details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Submit reception form",
                "operationId": "submit-reception-form",
                "parameters": [
                    {
                        "description": "Reception Form Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.FinalReceptionReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/switch/inspector/role": {
            "post": {
                "description": "Switch the role of an inspector",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Inspector Role"
                ],
                "summary": "Switch inspector role",
                "parameters": [
                    {
                        "description": "User ID and new role",
                        "name": "switch",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.SwitchRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/toggle/user/status": {
            "post": {
                "description": "Toggles the active status of a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Toggle User Status",
                "parameters": [
                    {
                        "description": "User Status Toggle Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.UserStatusToggle"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User details with updated status",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/transport/mode/{id}": {
            "get": {
                "description": "Retrieve a mode of transport by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get mode of transport",
                "operationId": "getModeOfTransport",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Mode of transport ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Mode of transport details",
                        "schema": {
                            "$ref": "#/definitions/api.ModeofTransportResp"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "404": {
                        "description": "Mode of transport not found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/transport/modes": {
            "get": {
                "description": "List all modes of transport",
                "produces": [
                    "application/json"
                ],
                "summary": "List modes of transport",
                "operationId": "getModesOfTransport",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page ID",
                        "name": "page_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of modes of transport",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.ModeofTransportResp"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing mode of transport",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update mode of transport",
                "operationId": "updateModeOfTransport",
                "parameters": [
                    {
                        "description": "Mode of transport details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.UpdateModeOfTransportRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated mode of transport",
                        "schema": {
                            "$ref": "#/definitions/api.ModeofTransportResp"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "404": {
                        "description": "Mode of transport not found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new mode of transport",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create mode of transport",
                "operationId": "createModeOfTransport",
                "parameters": [
                    {
                        "description": "Mode of transport details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.ModeofTransportRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully created mode of transport",
                        "schema": {
                            "$ref": "#/definitions/api.ModeofTransportResp"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "403": {
                        "description": "Mode of transport already exists",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/truck/hygiene/{id}": {
            "get": {
                "description": "Get truck hygiene details by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get truck hygiene details",
                "operationId": "get-truck-hygiene",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Truck hygiene ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/api.TruckHygieneTypeResponse"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/truck/status": {
            "post": {
                "description": "Create a track status request with provided data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "track"
                ],
                "summary": "Create a track status request",
                "parameters": [
                    {
                        "description": "Track Status Request Data",
                        "name": "status",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.TrackStatusReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/update-inspection-report": {
            "post": {
                "description": "Updates an inspection report based on the provided request.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Inspection Reports"
                ],
                "summary": "Update Inspection Report",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Context",
                        "name": "ctx",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Inspection Report Request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.InspectionReportReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Inspection report updated successfully",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/update/all/order": {
            "put": {
                "description": "Updates order details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update Order",
                "parameters": [
                    {
                        "description": "Order ID",
                        "name": "id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Order details to update",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.UpdateOrderRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/update/batch/list": {
            "post": {
                "description": "Updates packing batch list details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update Packing Batch List",
                "parameters": [
                    {
                        "description": "Batch List Request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.BatchReqS"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/update/exitpoint/gps": {
            "put": {
                "description": "Update exit point GPS coordinates",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "exit_points"
                ],
                "summary": "Update exit point GPS coordinates",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.ExitPointReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/update/exporter/stamp": {
            "post": {
                "description": "Updates exporter stamp",
                "summary": "Update Exporter Stamp",
                "parameters": [
                    {
                        "description": "Exporter stamp",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.ExporterStamp"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/update/harvest/balance": {
            "post": {
                "description": "Updates the harvest balance for a farmer's farm",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Harvest"
                ],
                "summary": "Update Harvest Balance",
                "parameters": [
                    {
                        "description": "Harvest Balance Request",
                        "name": "harvest_balance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.HarvestTraceabiliity"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/update/order/weight": {
            "post": {
                "description": "Updates order weight",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update Order Weight",
                "parameters": [
                    {
                        "description": "Weight reject",
                        "name": "weightreject",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/update/packhouse/gps": {
            "post": {
                "description": "Updates the GPS coordinates of a packhouse",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update Packhouse GPS",
                "parameters": [
                    {
                        "description": "Packhouse GPS details to update",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.PackHouseUp"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/update/packhouse/status": {
            "put": {
                "description": "Updates the status of a packhouse",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update Packhouse Status",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Packhouse ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Packhouse status update details",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.PackhouseUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/update/packing/list": {
            "post": {
                "description": "Updates packing list details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update Packing List",
                "parameters": [
                    {
                        "description": "Packing list details to update",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.UpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/update/packinglist/status": {
            "post": {
                "description": "Updates the status of packing lists based on the provided request.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Packing Lists"
                ],
                "summary": "Update Packing List Status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Context",
                        "name": "ctx",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Status Request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.UpdateStatusReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status updated successfully",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/update/reception/attributes": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update reception attributes with the given details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update reception attributes",
                "operationId": "update-reception-attributes",
                "parameters": [
                    {
                        "description": "Update Reception Attributes Request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.UpdateReceptionFormAttributesRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/update/reception/form": {
            "put": {
                "description": "Updates a reception form",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ReceptionForms"
                ],
                "summary": "Update Reception Form",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Reception ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "session_id",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/update/red/flags": {
            "put": {
                "description": "Updates status and reason of a red flag",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update Red Flag",
                "parameters": [
                    {
                        "description": "Red flag update details",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.UpdateRedFlags"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/update/session/details": {
            "put": {
                "description": "Updates session information for a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update Session for User",
                "parameters": [
                    {
                        "description": "Session ID",
                        "name": "session_id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Packhouse ID",
                        "name": "packhouse_id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Export Company ID",
                        "name": "exportcompany_id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/api.SessionInfo"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/update/truck/hygiene/report": {
            "post": {
                "description": "Update a truck hygiene report with new data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "hygiene"
                ],
                "summary": "Update a truck hygiene report",
                "parameters": [
                    {
                        "description": "Truck Hygiene Update Data",
                        "name": "report",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.TruckHygieneUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/update/truck/image": {
            "post": {
                "description": "Upload an image report of a truck",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "hygiene"
                ],
                "summary": "Upload a truck image report",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Truck Image",
                        "name": "truck_image",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Consignment Number",
                        "name": "consignment_no",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Vehicle Registration Number",
                        "name": "vehicleregno",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/update/user/signature": {
            "post": {
                "description": "Update user signature.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Update user signature.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization Payload",
                        "name": "auth_payload",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "User signature to be updated",
                        "name": "signature",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User Signature Uploaded Successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/upload/company/logo": {
            "post": {
                "description": "Uploads company logo",
                "summary": "Upload Company Logo",
                "parameters": [
                    {
                        "description": "Company logo request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.logoReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/upload/farmer/id": {
            "post": {
                "description": "Uploads farmer ID image for the given farmer ID",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Upload farmer ID",
                "operationId": "uploadFarmerID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the farmer",
                        "name": "farmer_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Farmer ID image",
                        "name": "farmer_image",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/upload/inspector/files": {
            "post": {
                "description": "Uploads inspector files",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Upload Files",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Stamp",
                        "name": "stamp",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Signature",
                        "name": "signature",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/upload/inspector/stamps": {
            "post": {
                "description": "Upload inspector stamps",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Inspector"
                ],
                "summary": "Upload inspector stamps",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Inspector Stamps",
                        "name": "stamps",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/upload/truck/image": {
            "post": {
                "description": "Upload an image of a truck",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "hygiene"
                ],
                "summary": "Upload a truck image",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Consignment Number",
                        "name": "consignment_no",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Truck Image",
                        "name": "truck_image",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Vehicle Registration Number",
                        "name": "vehicleregno",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/user/details/update": {
            "post": {
                "description": "Update user details.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Update user details.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization Payload",
                        "name": "auth_payload",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "User details to be updated",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.UserDetailsReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success: updated user details successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/user/export/companies": {
            "get": {
                "description": "Retrieves export companies associated with the user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get Export Companies for User",
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/user/pack/houses": {
            "get": {
                "description": "Retrieves pack houses associated with the user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get Pack Houses for User",
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/user/signature": {
            "get": {
                "description": "Fetch the signature of the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Signature"
                ],
                "summary": "Get user signature",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/user/type/stats": {
            "get": {
                "description": "Retrieves statistics for different user types",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "User Type Statistics",
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/user/update/password": {
            "post": {
                "description": "Updates a user's password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update User Password",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Update User Password Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.UpdateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "403": {
                        "description": "forbidden",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "Fetches a list of users",
                "produces": [
                    "application/json"
                ],
                "summary": "Get Users",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page ID",
                        "name": "page_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page Size",
                        "name": "page_size",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/api.UserResType"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create User",
                "parameters": [
                    {
                        "description": "Create User Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/api.UserResType"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "403": {
                        "description": "forbidden",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/users/login": {
            "post": {
                "description": "Logs in a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Login User",
                "parameters": [
                    {
                        "description": "Login User Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.loginUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/api.loginUserResponse"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "401": {
                        "description": "unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/users/logout": {
            "post": {
                "description": "Logs out a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Logout",
                "parameters": [
                    {
                        "description": "Session ID",
                        "name": "session_id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "description": "Fetches a user by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get User",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/api.UserResType"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/verify/otp": {
            "post": {
                "description": "Verify the OTP sent to the farmer's phone",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Farmer OTP"
                ],
                "summary": "Verify OTP",
                "parameters": [
                    {
                        "description": "OTP and phone number",
                        "name": "verification",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.FarmerVerification"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/villages": {
            "put": {
                "description": "Updates an existing village",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Villages"
                ],
                "summary": "Update Village",
                "parameters": [
                    {
                        "description": "Village Data",
                        "name": "village",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.UpdateVillageReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated Village",
                        "schema": {
                            "$ref": "#/definitions/api.VillageRespi"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/villages/create": {
            "post": {
                "description": "Creates a new village",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Villages"
                ],
                "summary": "Create Village",
                "parameters": [
                    {
                        "description": "Village Data",
                        "name": "village",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.VillageCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "village created successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/villages/{id}": {
            "get": {
                "description": "Gets details of a specific village by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Villages"
                ],
                "summary": "Get Village",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Village ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Village Data",
                        "schema": {
                            "$ref": "#/definitions/api.VillageRespi"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    },
                    "404": {
                        "description": "Village not found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorTypeResponse"
                        }
                    }
                }
            }
        },
        "/zonal/inspector": {
            "get": {
                "description": "Get a list of zonal inspectors",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Zonal Inspectors"
                ],
                "summary": "List zonal inspectors",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessTypeResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.AdminRequest": {
            "type": "object",
            "required": [
                "email",
                "fullname",
                "nin",
                "phone",
                "regno"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "fullname": {
                    "type": "string"
                },
                "nin": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "regno": {
                    "type": "string"
                }
            }
        },
        "api.AirlineRequest": {
            "type": "object",
            "required": [
                "airlinecode",
                "airlinename",
                "mot_id"
            ],
            "properties": {
                "airlinecode": {
                    "type": "string"
                },
                "airlinename": {
                    "type": "string"
                },
                "mot_id": {
                    "type": "integer"
                }
            }
        },
        "api.AirlineResponse": {
            "type": "object",
            "properties": {
                "airlinecode": {
                    "type": "string"
                },
                "airlinename": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "mot_id": {
                    "type": "integer"
                }
            }
        },
        "api.AllDocumentDetailsRow": {
            "type": "object",
            "properties": {
                "countryname": {
                    "type": "string"
                },
                "cropname": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "documentusage": {
                    "type": "string"
                },
                "iscrop": {
                    "type": "boolean"
                },
                "isglobal": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "api.AllZonesRow": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "zone": {
                    "type": "string"
                }
            }
        },
        "api.AttachMoreReq": {
            "type": "object",
            "properties": {
                "inspectorexporter": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.ExporterInspectorReq"
                    }
                }
            }
        },
        "api.AttachPackhouseRequest": {
            "type": "object",
            "required": [
                "exportcompany_id",
                "packhouse_id"
            ],
            "properties": {
                "exportcompany_id": {
                    "type": "integer",
                    "minimum": 1
                },
                "packhouse_id": {
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "api.AttachRoleRequest": {
            "type": "object",
            "required": [
                "role_id",
                "user_id"
            ],
            "properties": {
                "role_id": {
                    "type": "integer",
                    "minimum": 1
                },
                "user_id": {
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "api.BatchReqS": {
            "type": "object",
            "properties": {
                "batchlist": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.PackBatchReq"
                    }
                }
            }
        },
        "api.BorderInspectorStatsType": {
            "type": "object",
            "properties": {
                "awaiting": {
                    "type": "integer"
                },
                "completed": {
                    "type": "integer"
                },
                "stopped": {
                    "type": "integer"
                }
            }
        },
        "api.ClientRequest": {
            "type": "object",
            "required": [
                "companyname",
                "contactemail",
                "contactphone",
                "country_id",
                "exportcompany_id"
            ],
            "properties": {
                "companyname": {
                    "type": "string"
                },
                "contactemail": {
                    "type": "string"
                },
                "contactphone": {
                    "type": "string"
                },
                "country_id": {
                    "type": "integer",
                    "minimum": 1
                },
                "exportcompany_id": {
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "api.ClientResponse": {
            "type": "object",
            "required": [
                "airlinecode",
                "airlinename"
            ],
            "properties": {
                "airlinecode": {
                    "type": "string"
                },
                "airlinename": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "api.ClientStatusReq": {
            "type": "object",
            "required": [
                "client_id",
                "status"
            ],
            "properties": {
                "client_id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "api.CompanyRes": {
            "type": "object",
            "properties": {
                "assignment_date": {
                    "type": "string"
                },
                "expaddress1": {
                    "type": "string"
                },
                "expcompanyphone": {
                    "type": "string"
                },
                "expemail": {
                    "type": "string"
                },
                "expname": {
                    "type": "string"
                },
                "exportcompanies_creation_date": {
                    "type": "string"
                },
                "exportcompany_id": {
                    "type": "integer"
                },
                "expregno": {
                    "type": "string"
                },
                "packhouse_creation_date": {
                    "type": "string"
                },
                "packhouse_id": {
                    "type": "integer"
                },
                "phname": {
                    "type": "string"
                },
                "phregno": {
                    "type": "string"
                },
                "registrationstatus": {
                    "type": "string"
                },
                "validitydate": {
                    "type": "string"
                }
            }
        },
        "api.ConsigmentDocTypeRequest": {
            "type": "object",
            "required": [
                "cd_code",
                "cd_description"
            ],
            "properties": {
                "cd_code": {
                    "type": "string"
                },
                "cd_description": {
                    "type": "string"
                }
            }
        },
        "api.ConsigmentReasonRejectionRequest": {
            "type": "object",
            "required": [
                "crr_code",
                "crr_description"
            ],
            "properties": {
                "crr_code": {
                    "type": "string"
                },
                "crr_description": {
                    "type": "string"
                }
            }
        },
        "api.ConsigmentRejectionRequest": {
            "type": "object",
            "required": [
                "cd_code",
                "cd_description"
            ],
            "properties": {
                "cd_code": {
                    "type": "string"
                },
                "cd_description": {
                    "type": "string"
                }
            }
        },
        "api.ConsignmentReport": {
            "type": "object",
            "properties": {
                "consignmentdetails": {
                    "type": "object",
                    "additionalProperties": true
                },
                "order_crops": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": true
                    }
                },
                "packinglists": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": true
                    }
                }
            }
        },
        "api.ConsignmentResponse": {
            "type": "object",
            "properties": {
                "qcp4_id": {
                    "type": "integer"
                },
                "qcp4_others": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Qcp4OtherResponse"
                    }
                },
                "qcp4_products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Qcp4Response"
                    }
                }
            }
        },
        "api.ConsignmentTpDetails": {
            "type": "object",
            "required": [
                "airline_id",
                "consignment_number",
                "country_id",
                "exit_date_time",
                "exithandler_id",
                "exitpoint_id",
                "mot_id"
            ],
            "properties": {
                "airline_id": {
                    "type": "integer",
                    "minimum": 1
                },
                "consignment_number": {
                    "type": "string",
                    "minLength": 1
                },
                "country_id": {
                    "type": "integer",
                    "minimum": 1
                },
                "exit_date_time": {
                    "type": "string"
                },
                "exithandler_id": {
                    "type": "integer",
                    "minimum": 1
                },
                "exitpoint_id": {
                    "type": "integer",
                    "minimum": 1
                },
                "mot_id": {
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "api.ConsignmentTpDetailsResponse": {
            "type": "object",
            "properties": {
                "airline_id": {
                    "$ref": "#/definitions/sql.NullInt32"
                },
                "country_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "exit_date": {
                    "type": "string"
                },
                "exithandler_id": {
                    "$ref": "#/definitions/sql.NullInt32"
                },
                "exitpoint_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "modesoftransport_id": {
                    "type": "integer"
                },
                "plannedconsignments_id": {
                    "type": "string"
                }
            }
        },
        "api.Consignmentdoctype": {
            "type": "object",
            "properties": {
                "cdcode": {
                    "type": "string"
                },
                "cddescription": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "api.Consignmentreasonrejection": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "crrcode": {
                    "type": "string"
                },
                "crrdescription": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "api.Consignmentrejection": {
            "type": "object",
            "properties": {
                "cjcode": {
                    "type": "string"
                },
                "cjdescription": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "api.ContactsRequest": {
            "type": "object",
            "required": [
                "contact_email",
                "contact_name",
                "contact_phone"
            ],
            "properties": {
                "contact_email": {
                    "type": "string"
                },
                "contact_name": {
                    "type": "string"
                },
                "contact_phone": {
                    "type": "string"
                }
            }
        },
        "api.CountResponse": {
            "type": "object",
            "properties": {
                "accepted": {
                    "type": "integer"
                },
                "awaitingborderinspection": {
                    "type": "integer"
                },
                "completed": {
                    "type": "integer"
                },
                "destroyed": {
                    "type": "integer"
                },
                "queried": {
                    "type": "integer"
                },
                "redocument": {
                    "type": "integer"
                },
                "rejected": {
                    "type": "integer"
                },
                "resort": {
                    "type": "integer"
                },
                "scheduled": {
                    "type": "integer"
                }
            }
        },
        "api.CountryRequest": {
            "type": "object",
            "required": [
                "countrycode",
                "countryname"
            ],
            "properties": {
                "countrycode": {
                    "type": "string",
                    "maxLength": 5
                },
                "countryname": {
                    "type": "string"
                }
            }
        },
        "api.CountryRes": {
            "type": "object",
            "properties": {
                "countrycode": {
                    "type": "string"
                },
                "countryname": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "dialcodes": {
                    "$ref": "#/definitions/sql.NullString"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "api.CountsTypeResponse": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "integer"
                },
                "inactive": {
                    "type": "integer"
                },
                "suspended": {
                    "type": "integer"
                }
            }
        },
        "api.CreateDistrictReq": {
            "type": "object",
            "required": [
                "code",
                "name"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "api.CreateExitPointRequest": {
            "type": "object",
            "required": [
                "district",
                "expcode",
                "expdescription",
                "expwhatsapp",
                "lat",
                "long",
                "mot_id",
                "parish",
                "village"
            ],
            "properties": {
                "district": {
                    "type": "integer"
                },
                "expcode": {
                    "type": "string"
                },
                "expdescription": {
                    "type": "string"
                },
                "expwhatsapp": {
                    "type": "string"
                },
                "lat": {
                    "type": "number"
                },
                "long": {
                    "type": "number"
                },
                "mot_id": {
                    "type": "integer"
                },
                "parish": {
                    "type": "integer"
                },
                "village": {
                    "type": "integer"
                }
            }
        },
        "api.CreateRoleRequest": {
            "type": "object",
            "required": [
                "description",
                "name",
                "permissions"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "api.CreateRoleRes": {
            "type": "object",
            "properties": {
                "permissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "role_id": {
                    "type": "integer"
                }
            }
        },
        "api.CreateUserRequest": {
            "type": "object",
            "required": [
                "email",
                "fullname",
                "password",
                "phone"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "fullname": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 6
                },
                "phone": {
                    "type": "string",
                    "minLength": 6
                }
            }
        },
        "api.CreateUserResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "fullname": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "phone": {
                    "type": "string"
                },
                "user_type": {
                    "type": "string"
                }
            }
        },
        "api.CropCountRes": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "string"
                },
                "inactive": {
                    "type": "string"
                },
                "suspended": {
                    "type": "string"
                }
            }
        },
        "api.CropRequest": {
            "type": "object",
            "required": [
                "ciccode",
                "crophscode",
                "cropname",
                "riskstatus",
                "variant"
            ],
            "properties": {
                "ciccode": {
                    "type": "string"
                },
                "crophscode": {
                    "type": "string"
                },
                "cropname": {
                    "type": "string"
                },
                "riskstatus": {
                    "type": "string"
                },
                "variant": {
                    "type": "string"
                }
            }
        },
        "api.CropRes": {
            "type": "object",
            "properties": {
                "cic_code": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "crophscode": {
                    "type": "string"
                },
                "cropname": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "riskstatus": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "variant": {
                    "type": "string"
                }
            }
        },
        "api.CropsUpdateOrder": {
            "type": "object",
            "required": [
                "crop_id",
                "order_id",
                "weight"
            ],
            "properties": {
                "crop_id": {
                    "type": "integer"
                },
                "order_id": {
                    "type": "integer"
                },
                "weight": {
                    "type": "number"
                }
            }
        },
        "api.CustomDetailsResponse": {
            "type": "object",
            "properties": {
                "box_weight": {
                    "type": "number"
                },
                "client_name": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "crop_id": {
                    "type": "integer"
                },
                "cropname": {
                    "type": "string"
                },
                "order_id": {
                    "type": "integer"
                },
                "packinglist_batch_id": {
                    "type": "integer"
                },
                "packinglist_id": {
                    "type": "integer"
                },
                "product_net_weight": {
                    "type": "number"
                },
                "total_boxes": {
                    "type": "integer"
                },
                "total_gross_weight": {
                    "type": "number"
                },
                "total_product_net_weight": {
                    "type": "number"
                },
                "traceability_code": {
                    "type": "string"
                }
            }
        },
        "api.CustomDocResponse": {
            "type": "object",
            "properties": {
                "docs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.DocsResponse"
                    }
                },
                "other_docs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.OtherDocsResponse"
                    }
                }
            }
        },
        "api.DeactivateCropReq": {
            "type": "object",
            "required": [
                "crop_id",
                "order_id"
            ],
            "properties": {
                "crop_id": {
                    "type": "integer"
                },
                "order_id": {
                    "type": "integer"
                }
            }
        },
        "api.DeactiveReq": {
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "exportcompany_id": {
                    "type": "integer"
                },
                "report": {
                    "$ref": "#/definitions/multipart.FileHeader"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "api.DestructionNotice": {
            "type": "object",
            "required": [
                "border_inspector",
                "company_rep",
                "consignment_no",
                "instructions",
                "nppo_inspector"
            ],
            "properties": {
                "border_inspector": {
                    "type": "integer",
                    "minimum": 1
                },
                "company_rep": {
                    "type": "integer",
                    "minimum": 1
                },
                "consignment_no": {
                    "type": "string"
                },
                "instructions": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "nppo_inspector": {
                    "type": "integer",
                    "minimum": 1
                },
                "session_id": {
                    "type": "string"
                }
            }
        },
        "api.DialCodeRequest": {
            "type": "object",
            "required": [
                "code",
                "dial_code"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "dial_code": {
                    "type": "string"
                }
            }
        },
        "api.DialImportRequest": {
            "type": "object",
            "required": [
                "dialcodes"
            ],
            "properties": {
                "dialcodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.DialCodeRequest"
                    }
                }
            }
        },
        "api.DistrictRes": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "api.DocsResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "doc_id": {
                    "type": "integer"
                },
                "document": {
                    "type": "string"
                },
                "document_id": {
                    "type": "integer"
                },
                "document_path": {
                    "type": "string"
                },
                "document_usage": {
                    "type": "string"
                },
                "form_id": {
                    "type": "string"
                }
            }
        },
        "api.DocumentsRequest": {
            "type": "object",
            "required": [
                "countries",
                "crops",
                "description",
                "document_name",
                "document_usage",
                "iscrop",
                "isglobal"
            ],
            "properties": {
                "countries": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "crops": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "description": {
                    "type": "string"
                },
                "document_name": {
                    "type": "string"
                },
                "document_usage": {
                    "type": "string"
                },
                "iscrop": {
                    "type": "string"
                },
                "isglobal": {
                    "type": "string"
                }
            }
        },
        "api.ErrorTypeResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "api.ExitConsignmentResponse": {
            "type": "object",
            "properties": {
                "consignment_no": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "exit_date": {
                    "type": "string"
                },
                "exportcompany": {
                    "type": "string"
                },
                "packhouse": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "api.ExitHandlerRequest": {
            "type": "object",
            "required": [
                "exhcode",
                "exhdescription",
                "exitpoint_id"
            ],
            "properties": {
                "exhcode": {
                    "type": "string"
                },
                "exhdescription": {
                    "type": "string"
                },
                "exitpoint_id": {
                    "type": "integer"
                }
            }
        },
        "api.ExitHandlerResponse": {
            "type": "object",
            "required": [
                "exhcode",
                "exhdescription",
                "exitpoint_id",
                "id"
            ],
            "properties": {
                "exhcode": {
                    "type": "string"
                },
                "exhdescription": {
                    "type": "string"
                },
                "exitpoint_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "api.ExitPointReq": {
            "type": "object",
            "required": [
                "id",
                "lat",
                "long"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "lat": {
                    "type": "number"
                },
                "long": {
                    "type": "number"
                }
            }
        },
        "api.ExitPointResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "district_id": {
                    "type": "integer"
                },
                "expcode": {
                    "type": "string"
                },
                "expdescription": {
                    "type": "string"
                },
                "expwhatsapp": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "latitude": {
                    "type": "number"
                },
                "longtitude": {
                    "type": "number"
                },
                "modeoftransport_id": {
                    "type": "integer"
                },
                "parish_id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "village_id": {
                    "type": "integer"
                }
            }
        },
        "api.ExportCompanyRequest": {
            "type": "object",
            "required": [
                "expaddress1",
                "expcompanyphone",
                "expdistrict",
                "expemail",
                "expiry_date",
                "expname",
                "expparish",
                "expregno",
                "expsubcounty",
                "expvillage",
                "reg_status"
            ],
            "properties": {
                "expaddress1": {
                    "type": "string"
                },
                "expcompanyphone": {
                    "type": "string"
                },
                "expdistrict": {
                    "type": "integer"
                },
                "expemail": {
                    "type": "string"
                },
                "expiry_date": {
                    "type": "string"
                },
                "expname": {
                    "type": "string"
                },
                "expparish": {
                    "type": "integer"
                },
                "expregno": {
                    "type": "string"
                },
                "expsubcounty": {
                    "type": "integer"
                },
                "expvillage": {
                    "type": "integer"
                },
                "reg_status": {
                    "type": "string"
                }
            }
        },
        "api.ExportCompanyResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "expaddress1": {
                    "type": "string"
                },
                "expcompanyphone": {
                    "type": "string"
                },
                "expdistrict_id": {
                    "type": "integer"
                },
                "expemail": {
                    "type": "string"
                },
                "expname": {
                    "type": "string"
                },
                "expparish_id": {
                    "type": "integer"
                },
                "expregno": {
                    "type": "string"
                },
                "exprexno": {
                    "$ref": "#/definitions/sql.NullString"
                },
                "expsubcounty_id": {
                    "type": "integer"
                },
                "expvillage_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "logo": {
                    "$ref": "#/definitions/sql.NullString"
                },
                "registrationstatus": {
                    "type": "string"
                },
                "validitydate": {
                    "type": "string"
                }
            }
        },
        "api.ExportTypeResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "expaddress1": {
                    "type": "string"
                },
                "expcompanyphone": {
                    "type": "string"
                },
                "expdistrict_id": {
                    "type": "integer"
                },
                "expemail": {
                    "type": "string"
                },
                "expname": {
                    "type": "string"
                },
                "expparish_id": {
                    "type": "integer"
                },
                "expregno": {
                    "type": "string"
                },
                "exprexno": {
                    "$ref": "#/definitions/sql.NullString"
                },
                "expsubcounty_id": {
                    "type": "integer"
                },
                "expvillage_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "logo": {
                    "$ref": "#/definitions/sql.NullString"
                },
                "registrationstatus": {
                    "type": "string"
                },
                "validitydate": {
                    "type": "string"
                }
            }
        },
        "api.ExporterAttachment": {
            "type": "object",
            "required": [
                "exportcompany_id",
                "user_id"
            ],
            "properties": {
                "exportcompany_id": {
                    "type": "integer",
                    "minimum": 1
                },
                "user_id": {
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "api.ExporterFarmerCountResponse": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "integer"
                },
                "inactive": {
                    "type": "integer"
                },
                "suspended": {
                    "type": "integer"
                }
            }
        },
        "api.ExporterInspectorReq": {
            "type": "object",
            "properties": {
                "exportcompany_id": {
                    "type": "integer"
                },
                "packhouseinspector_id": {
                    "type": "integer"
                }
            }
        },
        "api.ExporterManagerReq": {
            "type": "object",
            "required": [
                "email",
                "exportcompany_id",
                "fullname",
                "nin",
                "phone"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "exportcompany_id": {
                    "type": "integer"
                },
                "fullname": {
                    "type": "string"
                },
                "nin": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "api.ExporterStamp": {
            "type": "object",
            "required": [
                "stamps"
            ],
            "properties": {
                "stamps": {
                    "$ref": "#/definitions/multipart.FileHeader"
                }
            }
        },
        "api.FarmExporterReq": {
            "type": "object",
            "required": [
                "exporter_id",
                "farmer_id"
            ],
            "properties": {
                "exporter_id": {
                    "type": "integer"
                },
                "farmer_id": {
                    "type": "integer"
                }
            }
        },
        "api.FarmerCountRes": {
            "type": "object",
            "properties": {
                "active_farmers": {
                    "type": "integer"
                },
                "deactivated_farmers": {
                    "type": "integer"
                },
                "inactive_farmers": {
                    "type": "integer"
                },
                "redflagged": {
                    "type": "integer"
                }
            }
        },
        "api.FarmerExporter": {
            "type": "object",
            "required": [
                "exportcompany_id",
                "farmers"
            ],
            "properties": {
                "exportcompany_id": {
                    "type": "integer"
                },
                "farmers": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "api.FarmerFarmsreq": {
            "type": "object",
            "required": [
                "farmer_id",
                "farms"
            ],
            "properties": {
                "farmer_id": {
                    "type": "integer"
                },
                "farms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.FarmsRequest"
                    }
                }
            }
        },
        "api.FarmerOTP": {
            "type": "object",
            "required": [
                "phone"
            ],
            "properties": {
                "phone": {
                    "type": "string"
                }
            }
        },
        "api.FarmerProduce": {
            "type": "object",
            "required": [
                "acreage",
                "crop_id",
                "planting_date",
                "risk_status"
            ],
            "properties": {
                "acreage": {
                    "type": "integer"
                },
                "crop_id": {
                    "type": "integer"
                },
                "planting_date": {
                    "type": "string"
                },
                "risk_status": {
                    "type": "string"
                }
            }
        },
        "api.FarmerTxRequest": {
            "type": "object",
            "required": [
                "contacts",
                "farms",
                "fmid",
                "fmidtype",
                "fmname",
                "fmphone"
            ],
            "properties": {
                "contacts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.ContactsRequest"
                    }
                },
                "farms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.FarmsRequestTx"
                    }
                },
                "fmid": {
                    "type": "string"
                },
                "fmidtype": {
                    "type": "string"
                },
                "fmname": {
                    "type": "string"
                },
                "fmphone": {
                    "type": "string"
                }
            }
        },
        "api.FarmerTypeTraceability": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "fmcode": {
                    "$ref": "#/definitions/sql.NullString"
                },
                "fmemail": {
                    "$ref": "#/definitions/sql.NullString"
                },
                "fmid": {
                    "type": "string"
                },
                "fmidtype": {
                    "type": "string"
                },
                "fmname": {
                    "type": "string"
                },
                "fmphone": {
                    "type": "string"
                },
                "fmphoto": {
                    "$ref": "#/definitions/sql.NullString"
                },
                "id": {
                    "type": "integer"
                },
                "isverified": {
                    "type": "boolean"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "api.FarmerVerification": {
            "type": "object",
            "required": [
                "otp",
                "phone"
            ],
            "properties": {
                "otp": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "api.FarmsRequest": {
            "type": "object",
            "required": [
                "acreage",
                "crop_id",
                "district",
                "lat",
                "long",
                "parish",
                "planting_date",
                "subcounty",
                "village"
            ],
            "properties": {
                "acreage": {
                    "type": "number"
                },
                "crop_id": {
                    "type": "integer"
                },
                "district": {
                    "type": "integer"
                },
                "lat": {
                    "type": "number"
                },
                "long": {
                    "type": "number"
                },
                "parish": {
                    "type": "integer"
                },
                "planting_date": {
                    "type": "string"
                },
                "subcounty": {
                    "type": "integer"
                },
                "village": {
                    "type": "integer"
                }
            }
        },
        "api.FetchCompletedCountInspectionsRes": {
            "type": "object",
            "properties": {
                "packinglists": {
                    "type": "integer"
                },
                "qcp1s": {
                    "type": "integer"
                },
                "qcp2s": {
                    "type": "integer"
                },
                "qcp3s": {
                    "type": "integer"
                },
                "receptionforms": {
                    "type": "integer"
                }
            }
        },
        "api.FetchRedFlagsRow": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "cropname": {
                    "type": "string"
                },
                "fmname": {
                    "type": "string"
                },
                "fullname": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "isactive": {
                    "type": "boolean"
                },
                "reason": {
                    "type": "string"
                },
                "stage": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/sql.NullString"
                },
                "status_2": {
                    "$ref": "#/definitions/sql.NullString"
                },
                "traceability_code": {
                    "type": "string"
                }
            }
        },
        "api.FilterClientRequest": {
            "type": "object",
            "properties": {
                "session_id": {
                    "type": "string"
                }
            }
        },
        "api.FinalReceptionReq": {
            "type": "object",
            "required": [
                "receptionform_id",
                "session_id"
            ],
            "properties": {
                "receptionform_id": {
                    "type": "integer"
                },
                "session_id": {
                    "type": "string"
                }
            }
        },
        "api.GetFarmerBasedCropRow": {
            "type": "object",
            "properties": {
                "cropname": {
                    "type": "string"
                },
                "farmer_id": {
                    "type": "integer"
                },
                "fmcode": {
                    "$ref": "#/definitions/sql.NullString"
                },
                "fmname": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "traceability_code": {
                    "type": "string"
                },
                "variant": {
                    "type": "string"
                }
            }
        },
        "api.HarvestTraceabiliity": {
            "type": "object",
            "required": [
                "harvest_balance",
                "traceability_code"
            ],
            "properties": {
                "harvest_balance": {
                    "type": "number"
                },
                "traceability_code": {
                    "type": "string"
                }
            }
        },
        "api.InspectionReportReq": {
            "type": "object",
            "required": [
                "consignment_no",
                "instructions",
                "session_id"
            ],
            "properties": {
                "consignment_no": {
                    "type": "string"
                },
                "instructions": {
                    "$ref": "#/definitions/api.PackhouseInstructions"
                },
                "notes": {
                    "type": "string"
                },
                "other": {
                    "type": "string"
                },
                "session_id": {
                    "type": "string"
                }
            }
        },
        "api.InterceptionNotice": {
            "type": "object",
            "required": [
                "consignment_no",
                "instructions"
            ],
            "properties": {
                "consignment_no": {
                    "type": "string"
                },
                "instructions": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "session_id": {
                    "type": "string"
                }
            }
        },
        "api.ListPendingQcp4sRowType": {
            "type": "object",
            "properties": {
                "consignment_no": {
                    "$ref": "#/definitions/sql.NullString"
                },
                "created_at": {
                    "type": "string"
                },
                "cropname": {
                    "$ref": "#/definitions/sql.NullString"
                },
                "fullname": {
                    "$ref": "#/definitions/sql.NullString"
                },
                "order_id": {
                    "$ref": "#/definitions/sql.NullInt32"
                },
                "qcp4_id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "traceability_code": {
                    "$ref": "#/definitions/sql.NullString"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "api.ListPendingQcp5sRowType": {
            "type": "object",
            "properties": {
                "consignment_no": {
                    "$ref": "#/definitions/sql.NullString"
                },
                "created_at": {
                    "type": "string"
                },
                "cropname": {
                    "$ref": "#/definitions/sql.NullString"
                },
                "fullname": {
                    "$ref": "#/definitions/sql.NullString"
                },
                "order_id": {
                    "$ref": "#/definitions/sql.NullInt32"
                },
                "qcp5_id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "traceability_code": {
                    "$ref": "#/definitions/sql.NullString"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "api.ModeofTransportRequest": {
            "type": "object",
            "required": [
                "motdescription",
                "to_destination",
                "to_exit",
                "to_packhouse"
            ],
            "properties": {
                "motdescription": {
                    "type": "string"
                },
                "to_destination": {
                    "type": "string"
                },
                "to_exit": {
                    "type": "string"
                },
                "to_packhouse": {
                    "type": "string"
                }
            }
        },
        "api.ModeofTransportResp": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "motdescription": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "todestination": {
                    "type": "boolean"
                },
                "toexit": {
                    "type": "boolean"
                },
                "topackhouse": {
                    "type": "boolean"
                }
            }
        },
        "api.Mot": {
            "type": "object",
            "required": [
                "motdescription",
                "to_destination",
                "to_exit",
                "to_packhouse"
            ],
            "properties": {
                "motdescription": {
                    "type": "string"
                },
                "to_destination": {
                    "type": "boolean"
                },
                "to_exit": {
                    "type": "boolean"
                },
                "to_packhouse": {
                    "type": "boolean"
                }
            }
        },
        "api.NNPORequest": {
            "type": "object",
            "required": [
                "email",
                "fullname",
                "nin",
                "phone",
                "regno"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "fullname": {
                    "type": "string"
                },
                "nin": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "regno": {
                    "type": "string"
                }
            }
        },
        "api.OrderAllDetails": {
            "type": "object",
            "required": [
                "client_id",
                "exportcompany_id",
                "id",
                "products",
                "qualitycontroller_id"
            ],
            "properties": {
                "client_id": {
                    "type": "integer"
                },
                "exportcompany_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.ProductWeight"
                    }
                },
                "qualitycontroller_id": {
                    "type": "integer"
                }
            }
        },
        "api.OrderListResponse": {
            "type": "object",
            "properties": {
                "companyname": {
                    "type": "string"
                },
                "consignment_no": {
                    "type": "string"
                },
                "contactname": {
                    "type": "string"
                },
                "countryname": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "cropsdetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.CropsOnOrdersRow"
                    }
                },
                "order_id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "api.OrderRequest": {
            "type": "object",
            "required": [
                "client_id",
                "exportcompany_id",
                "products",
                "qualitycontroller_id"
            ],
            "properties": {
                "client_id": {
                    "type": "integer",
                    "minimum": 1
                },
                "exportcompany_id": {
                    "type": "integer",
                    "minimum": 1
                },
                "products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.ProductsArray"
                    }
                },
                "qualitycontroller_id": {
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "api.OrderRes": {
            "type": "object",
            "properties": {
                "client_id": {
                    "type": "integer"
                },
                "consignment_no": {
                    "$ref": "#/definitions/sql.NullString"
                },
                "created_at": {
                    "type": "string"
                },
                "exportcompany_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "api.OrderResponse": {
            "type": "object",
            "properties": {
                "client_id": {
                    "type": "integer"
                },
                "companyname": {
                    "type": "string"
                },
                "countryname": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "exportcompany_id": {
                    "type": "integer"
                },
                "order_id": {
                    "type": "integer"
                },
                "packinglist_id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "api.OrderStatus": {
            "type": "object",
            "required": [
                "order_id",
                "status"
            ],
            "properties": {
                "order_id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "api.OtherDocsResponse": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "plannedconsignments_id": {
                    "type": "string"
                }
            }
        },
        "api.PackBatchReq": {
            "type": "object",
            "required": [
                "box_weight",
                "boxes",
                "packlist_batch_id",
                "product_net_weight",
                "total_gross_weight",
                "total_product_weight"
            ],
            "properties": {
                "box_weight": {
                    "type": "number"
                },
                "boxes": {
                    "type": "integer"
                },
                "packlist_batch_id": {
                    "type": "integer"
                },
                "product_net_weight": {
                    "type": "number"
                },
                "total_gross_weight": {
                    "type": "number"
                },
                "total_product_weight": {
                    "type": "number"
                }
            }
        },
        "api.PackHouseRequest": {
            "type": "object",
            "required": [
                "contactemail",
                "contactname",
                "contactphone",
                "district",
                "expiry_date",
                "lat",
                "long",
                "parish",
                "phname",
                "phregno",
                "reg_status",
                "streetaddress",
                "village"
            ],
            "properties": {
                "contactemail": {
                    "type": "string"
                },
                "contactname": {
                    "type": "string"
                },
                "contactphone": {
                    "type": "string"
                },
                "district": {
                    "type": "integer"
                },
                "expiry_date": {
                    "type": "string"
                },
                "lat": {
                    "type": "number"
                },
                "long": {
                    "type": "number"
                },
                "parish": {
                    "type": "integer"
                },
                "phname": {
                    "type": "string"
                },
                "phregno": {
                    "type": "string"
                },
                "reg_status": {
                    "type": "string"
                },
                "streetaddress": {
                    "type": "string"
                },
                "village": {
                    "type": "integer"
                }
            }
        },
        "api.PackHouseResponse": {
            "type": "object",
            "properties": {
                "contactemail": {
                    "type": "string"
                },
                "contactname": {
                    "type": "string"
                },
                "contactphone": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "district_id": {
                    "type": "integer"
                },
                "expirydate": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "lat": {
                    "type": "number"
                },
                "long": {
                    "type": "number"
                },
                "parish_id": {
                    "type": "integer"
                },
                "phname": {
                    "type": "string"
                },
                "phregno": {
                    "type": "string"
                },
                "regstatus": {
                    "type": "string"
                },
                "streetaddress": {
                    "type": "string"
                },
                "village_id": {
                    "type": "integer"
                }
            }
        },
        "api.PackHouseUp": {
            "type": "object",
            "required": [
                "id",
                "lat",
                "long"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "lat": {
                    "type": "number"
                },
                "long": {
                    "type": "number"
                }
            }
        },
        "api.PackOthers": {
            "type": "object",
            "required": [
                "packinglist_id",
                "product_name",
                "total_boxes"
            ],
            "properties": {
                "box_weight": {
                    "type": "number"
                },
                "crop_id": {
                    "type": "integer"
                },
                "packinglist_id": {
                    "type": "integer"
                },
                "product_name": {
                    "type": "string"
                },
                "product_net_weight": {
                    "type": "number"
                },
                "total_boxes": {
                    "type": "integer"
                },
                "total_gross_weight": {
                    "type": "number"
                },
                "total_product_weight": {
                    "type": "number"
                }
            }
        },
        "api.PackageTypeRequest": {
            "type": "object",
            "required": [
                "pgcode",
                "pgdescription"
            ],
            "properties": {
                "pgcode": {
                    "type": "string"
                },
                "pgdescription": {
                    "type": "string"
                }
            }
        },
        "api.PackhouseInstructions": {
            "type": "string",
            "enum": [
                "None",
                "Re-Sort",
                "Re-Document",
                "Other"
            ],
            "x-enum-varnames": [
                "None",
                "Resort",
                "ReDocument",
                "Other"
            ]
        },
        "api.PackhouseList": {
            "type": "object",
            "properties": {
                "contactemail": {
                    "$ref": "#/definitions/sql.NullString"
                },
                "contactname": {
                    "$ref": "#/definitions/sql.NullString"
                },
                "contactphone": {
                    "$ref": "#/definitions/sql.NullString"
                },
                "phname": {
                    "$ref": "#/definitions/sql.NullString"
                },
                "phregno": {
                    "$ref": "#/definitions/sql.NullString"
                },
                "streetaddress": {
                    "$ref": "#/definitions/sql.NullString"
                }
            }
        },
        "api.PackhouseTypeResponse": {
            "type": "object",
            "properties": {
                "contactemail": {
                    "type": "string"
                },
                "contactname": {
                    "type": "string"
                },
                "contactphone": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "district_id": {
                    "type": "integer"
                },
                "expirydate": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "lat": {
                    "type": "number"
                },
                "long": {
                    "type": "number"
                },
                "parish_id": {
                    "type": "integer"
                },
                "phname": {
                    "type": "string"
                },
                "phregno": {
                    "type": "string"
                },
                "regstatus": {
                    "type": "string"
                },
                "streetaddress": {
                    "type": "string"
                },
                "village_id": {
                    "type": "integer"
                }
            }
        },
        "api.PackhouseUpdate": {
            "type": "object",
            "required": [
                "id",
                "status"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "api.PackingListRequest": {
            "type": "object",
            "required": [
                "box_weight",
                "crop_id",
                "order_id",
                "packinglist_id",
                "plp_id",
                "product_net_weight",
                "total_boxes",
                "total_gross_weight",
                "total_product_weight",
                "total_weight",
                "traceability_code"
            ],
            "properties": {
                "box_weight": {
                    "type": "number"
                },
                "crop_id": {
                    "type": "integer"
                },
                "order_id": {
                    "type": "integer"
                },
                "packinglist_id": {
                    "type": "integer"
                },
                "plp_id": {
                    "type": "integer"
                },
                "product_net_weight": {
                    "type": "number"
                },
                "total_boxes": {
                    "type": "integer"
                },
                "total_gross_weight": {
                    "type": "number"
                },
                "total_product_weight": {
                    "type": "number"
                },
                "total_weight": {
                    "type": "number"
                },
                "traceability_code": {
                    "type": "string"
                }
            }
        },
        "api.PackinglistDetailsResponse": {
            "type": "object",
            "properties": {
                "box_weight": {
                    "type": "number"
                },
                "crop_id": {
                    "type": "integer"
                },
                "crophscode": {
                    "type": "string"
                },
                "cropname": {
                    "type": "string"
                },
                "exportcompany_id": {
                    "type": "integer"
                },
                "packinglist_product_status": {
                    "type": "string"
                },
                "plp_id": {
                    "type": "integer"
                },
                "product_net_weight": {
                    "type": "number"
                },
                "risk_status": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "total_boxes": {
                    "type": "integer"
                },
                "total_gross_weight": {
                    "type": "number"
                },
                "total_product_weight": {
                    "type": "number"
                },
                "traceability_code": {
                    "type": "string"
                }
            }
        },
        "api.PackinglistResponse": {
            "type": "object",
            "properties": {
                "company_name": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "destination": {
                    "type": "string"
                },
                "order_id": {
                    "type": "integer"
                },
                "packinglist_id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "api.Parish": {
            "type": "object",
            "required": [
                "parish",
                "subcounty"
            ],
            "properties": {
                "parish": {
                    "type": "string"
                },
                "subcounty": {
                    "type": "integer"
                }
            }
        },
        "api.ParishCreate": {
            "type": "object",
            "required": [
                "code",
                "parish",
                "subcounty_id"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "parish": {
                    "type": "string"
                },
                "subcounty_id": {
                    "type": "integer"
                }
            }
        },
        "api.ParishRes": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "parish": {
                    "type": "string"
                },
                "subcounty_id": {
                    "type": "integer"
                }
            }
        },
        "api.ParishTypeRes": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "parish": {
                    "type": "string"
                },
                "subcounty_id": {
                    "type": "integer"
                }
            }
        },
        "api.PasswordReset": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "api.PlannedConsignmentDetailsResponse": {
            "type": "object",
            "properties": {
                "airline_id": {
                    "type": "integer"
                },
                "airlinename": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "country_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "exit_date": {
                    "type": "string"
                },
                "exithandler": {
                    "type": "string"
                },
                "exithandler_id": {
                    "type": "integer"
                },
                "exitpoint": {
                    "type": "string"
                },
                "exitpoint_id": {
                    "type": "integer"
                },
                "exportcompany": {
                    "type": "string"
                },
                "exportcompany_id": {
                    "type": "integer"
                },
                "modeoftransport": {
                    "type": "string"
                },
                "motid": {
                    "type": "integer"
                },
                "order_id": {
                    "type": "integer"
                },
                "orders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.OrderResponse"
                    }
                },
                "packhouse": {
                    "type": "string"
                },
                "regno": {
                    "type": "string"
                },
                "rexno": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "api.PlannedConsignmentDocumentResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "documentusage": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "iscrop": {
                    "type": "boolean"
                },
                "isglobal": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "api.PlannedConsignmentOtherDocsResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "plannedconsignments_id": {
                    "type": "string"
                }
            }
        },
        "api.PlannedConsignmentReponse": {
            "type": "object",
            "properties": {
                "consignment_no": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "expname": {
                    "type": "string"
                },
                "packhouse": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "api.PlannedConsignmentResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "exportcompany_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "api.PlannedConsignmentStatus": {
            "type": "string",
            "enum": [
                "Submitted",
                "Queried",
                "Accepted",
                "Completed"
            ],
            "x-enum-varnames": [
                "Submitted",
                "Queried",
                "Accepted",
                "Completeds"
            ]
        },
        "api.PlanningRequest": {
            "type": "object",
            "required": [
                "end_date",
                "order_id",
                "session_id",
                "start_date"
            ],
            "properties": {
                "end_date": {
                    "type": "string"
                },
                "order_id": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                        "type": "integer"
                    }
                },
                "session_id": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                }
            }
        },
        "api.ProductDocTypeRequest": {
            "type": "object",
            "required": [
                "pddocumentcode",
                "pddocumentdescription"
            ],
            "properties": {
                "pddocumentcode": {
                    "type": "string"
                },
                "pddocumentdescription": {
                    "type": "string"
                }
            }
        },
        "api.ProductDocumentTypeRes": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "pddocumentcode": {
                    "type": "string"
                },
                "pddocumentdescription": {
                    "type": "string"
                }
            }
        },
        "api.ProductWeight": {
            "type": "object",
            "required": [
                "crop_id",
                "weight"
            ],
            "properties": {
                "crop_id": {
                    "type": "integer"
                },
                "weight": {
                    "type": "number"
                }
            }
        },
        "api.ProductsArray": {
            "type": "object",
            "required": [
                "crop_id",
                "weight"
            ],
            "properties": {
                "crop_id": {
                    "type": "integer",
                    "minimum": 1
                },
                "weight": {
                    "type": "number",
                    "minimum": 1
                }
            }
        },
        "api.QCP1RecommendationsRequest": {
            "type": "object",
            "required": [
                "qcp1_id",
                "session_id",
                "status"
            ],
            "properties": {
                "passed_weight": {
                    "type": "number"
                },
                "qcp1_id": {
                    "type": "integer"
                },
                "rejected_weight": {
                    "type": "number"
                },
                "session_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "api.QCP3AttributesRequest": {
            "type": "object",
            "required": [
                "other",
                "qcp3_id",
                "qty_taken",
                "qualityattributes"
            ],
            "properties": {
                "other": {
                    "type": "string"
                },
                "qcp3_id": {
                    "type": "integer"
                },
                "qty_removed": {
                    "type": "number"
                },
                "qty_taken": {
                    "type": "number"
                },
                "qualityattributes": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "api.QCP3RecommendationRequest": {
            "type": "object",
            "required": [
                "passed_weight",
                "qcp3_id",
                "status"
            ],
            "properties": {
                "other": {
                    "type": "string"
                },
                "passed_weight": {
                    "type": "number"
                },
                "qcp3_id": {
                    "type": "integer"
                },
                "reasonforrejection": {
                    "type": "string"
                },
                "rejected_weight": {
                    "type": "number"
                },
                "status": {
                    "$ref": "#/definitions/api.RecommendationStatus"
                }
            }
        },
        "api.QCPListsType": {
            "type": "object",
            "properties": {
                "qcp1": {
                    "type": "string"
                },
                "qcp2": {
                    "type": "string"
                },
                "qcp3": {
                    "type": "string"
                }
            }
        },
        "api.Qcp1QrCodes": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "qrcode": {
                    "type": "string"
                },
                "receptionform_id": {
                    "type": "integer"
                }
            }
        },
        "api.Qcp1RecommendationType": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "netweightpassed": {
                    "$ref": "#/definitions/sql.NullFloat64"
                },
                "netweightrejected": {
                    "type": "number"
                },
                "other": {
                    "$ref": "#/definitions/sql.NullString"
                },
                "qcp1_id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "api.Qcp1Req": {
            "type": "object",
            "required": [
                "other",
                "qcp1_id",
                "qty_taken",
                "qualityattribute_id"
            ],
            "properties": {
                "other": {
                    "type": "string"
                },
                "percentage": {
                    "type": "number"
                },
                "qcp1_id": {
                    "type": "integer"
                },
                "qty_removed": {
                    "type": "number"
                },
                "qty_taken": {
                    "type": "number",
                    "minimum": 1
                },
                "qualityattribute_id": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "traceability_code": {
                    "type": "string"
                }
            }
        },
        "api.Qcp1Request": {
            "type": "object",
            "required": [
                "consignment_no",
                "crop_id",
                "farmer_id",
                "order_id",
                "session_id",
                "status"
            ],
            "properties": {
                "consignment_no": {
                    "type": "string"
                },
                "crop_id": {
                    "type": "integer"
                },
                "farmer_id": {
                    "type": "integer"
                },
                "order_id": {
                    "type": "integer"
                },
                "session_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "api.Qcp1Response": {
            "type": "object",
            "properties": {
                "batches": {
                    "type": "integer"
                },
                "client": {
                    "type": "string"
                },
                "consignment_no": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "cropname": {
                    "type": "string"
                },
                "fmcode": {
                    "type": "string"
                },
                "fmname": {
                    "type": "string"
                },
                "fullname": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "order_id": {
                    "type": "integer"
                },
                "qcp1_id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "traceability_code": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                },
                "weightpassed": {
                    "type": "number"
                }
            }
        },
        "api.Qcp2AttributesRequest": {
            "type": "object",
            "required": [
                "qcp2_id",
                "qty_taken",
                "qualityattributes"
            ],
            "properties": {
                "other": {
                    "type": "string"
                },
                "qcp2_id": {
                    "type": "integer",
                    "minimum": 1
                },
                "qty_removed": {
                    "type": "number"
                },
                "qty_taken": {
                    "type": "number"
                },
                "qualityattributes": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "api.Qcp2RecommendationsRequest": {
            "type": "object",
            "required": [
                "passed_weight",
                "qcp2_id",
                "status"
            ],
            "properties": {
                "other": {
                    "type": "string"
                },
                "passed_weight": {
                    "type": "number"
                },
                "qcp2_id": {
                    "type": "integer",
                    "minimum": 1
                },
                "rejected_weight": {
                    "type": "number"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "api.Qcp2Response": {
            "type": "object",
            "properties": {
                "batch_no": {
                    "type": "string"
                },
                "clientname": {
                    "type": "string"
                },
                "consignment_no": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "crop_name": {
                    "type": "string"
                },
                "fmname": {
                    "type": "string"
                },
                "fullname": {
                    "type": "string"
                },
                "order_id": {
                    "type": "integer"
                },
                "qcp2_id": {
                    "type": "integer"
                },
                "qcp2_status": {
                    "type": "string"
                },
                "traceability_code": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "api.Qcp2sCompanyReport": {
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "status": {
                    "type": "string"
                }
            }
        },
        "api.Qcp3RecommendationResType": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "netweightpassed": {
                    "$ref": "#/definitions/sql.NullFloat64"
                },
                "netweightrejected": {
                    "type": "number"
                },
                "other": {
                    "$ref": "#/definitions/sql.NullString"
                },
                "qcp3_id": {
                    "type": "integer"
                },
                "reasonforrejection": {
                    "$ref": "#/definitions/sql.NullString"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "api.Qcp3Response": {
            "type": "object",
            "properties": {
                "batch_no": {
                    "type": "string"
                },
                "client": {
                    "type": "string"
                },
                "consignment_no": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "crop_id": {
                    "type": "integer"
                },
                "crop_name": {
                    "type": "string"
                },
                "fmname": {
                    "type": "string"
                },
                "fullname": {
                    "type": "string"
                },
                "order_id": {
                    "type": "integer"
                },
                "qcp3_id": {
                    "type": "integer"
                },
                "qcp3_status": {
                    "type": "string"
                },
                "traceability_code": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "api.Qcp4AttributeResponse": {
            "type": "object",
            "properties": {
                "qcp4_id": {
                    "type": "integer"
                },
                "qcp4_product_id": {
                    "type": "integer"
                },
                "qualityattributes_id": {
                    "type": "integer"
                }
            }
        },
        "api.Qcp4DetailsResponse": {
            "type": "object",
            "properties": {
                "qcp4_attributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Qcp4AttributeResponse"
                    }
                },
                "qcp4_other_attributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Qcp4OtherAttributeResponse"
                    }
                },
                "qcp4_others": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Qcp4OtherResponse"
                    }
                },
                "qcp4_products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Qcp4Response"
                    }
                },
                "qcp4_recommendations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Qcp4RecommendationResponse"
                    }
                }
            }
        },
        "api.Qcp4OtherAttributeResponse": {
            "type": "object",
            "properties": {
                "qcp4_id": {
                    "type": "integer"
                },
                "qcp4_other_id": {
                    "type": "integer"
                },
                "qualityattributes_id": {
                    "type": "integer"
                }
            }
        },
        "api.Qcp4OtherResponse": {
            "type": "object",
            "required": [
                "boxweight",
                "productnetweight",
                "total_product_grossweight",
                "total_product_weight"
            ],
            "properties": {
                "boxweight": {
                    "type": "number"
                },
                "noofboxes": {
                    "type": "integer"
                },
                "packinglist_id": {
                    "type": "integer"
                },
                "product_name": {
                    "type": "string"
                },
                "productnetweight": {
                    "type": "number"
                },
                "qcp4_order_id": {
                    "type": "integer"
                },
                "qcp4_rowid": {
                    "type": "integer"
                },
                "sampled_boxes": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "total_product_grossweight": {
                    "type": "number"
                },
                "total_product_weight": {
                    "type": "number"
                }
            }
        },
        "api.Qcp4RecommendationRequest": {
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "passed_weight": {
                    "type": "number"
                },
                "rejected_weight": {
                    "type": "number"
                },
                "rejection_reason": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "api.Qcp4RecommendationResponse": {
            "type": "object",
            "properties": {
                "qcp4_id": {
                    "type": "integer"
                },
                "qcp4_product_id": {
                    "type": "integer"
                },
                "reason": {
                    "$ref": "#/definitions/sql.NullString"
                },
                "status": {
                    "type": "string"
                },
                "weight_passed": {
                    "type": "number"
                },
                "weight_rejected": {
                    "type": "number"
                }
            }
        },
        "api.Qcp4Response": {
            "type": "object",
            "required": [
                "boxweight",
                "productnetweight",
                "total_product_grossweight",
                "total_product_weight"
            ],
            "properties": {
                "boxweight": {
                    "type": "number"
                },
                "packinglist_id": {
                    "type": "integer"
                },
                "product_id": {
                    "type": "integer"
                },
                "productname": {
                    "type": "string"
                },
                "productnetweight": {
                    "type": "number"
                },
                "qcp4_order_id": {
                    "type": "integer"
                },
                "qcp4_rowid": {
                    "type": "integer"
                },
                "sampledboxes": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "total_boxes": {
                    "type": "integer"
                },
                "total_product_grossweight": {
                    "type": "number"
                },
                "total_product_weight": {
                    "type": "number"
                },
                "traceability_code": {
                    "type": "string"
                }
            }
        },
        "api.Qcp5AttributeResponse": {
            "type": "object",
            "properties": {
                "qcp5_id": {
                    "type": "integer"
                },
                "qcp5_product_id": {
                    "type": "integer"
                },
                "qualityattributes_id": {
                    "type": "integer"
                }
            }
        },
        "api.Qcp5DetailsTypeResponse": {
            "type": "object",
            "properties": {
                "qcp5_attributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Qcp5AttributeResponse"
                    }
                },
                "qcp5_other_attributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Qcp5OtherAttributeResponse"
                    }
                },
                "qcp5_others": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Qcp5OtherResponse"
                    }
                },
                "qcp5_products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Qcp5Response"
                    }
                },
                "qcp5_recommendations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Qcp5RecommendationResponse"
                    }
                }
            }
        },
        "api.Qcp5InspectionReportReq": {
            "type": "object",
            "required": [
                "consignment_no",
                "exportcompany_id"
            ],
            "properties": {
                "consignment_no": {
                    "type": "string"
                },
                "exportcompany_id": {
                    "type": "integer"
                },
                "notes": {
                    "type": "string"
                }
            }
        },
        "api.Qcp5InspectionRequest": {
            "type": "object",
            "required": [
                "exportcompany_id"
            ],
            "properties": {
                "box_weight": {
                    "type": "number"
                },
                "boxes": {
                    "type": "integer"
                },
                "exportcompany_id": {
                    "type": "integer"
                },
                "order_id": {
                    "type": "integer"
                },
                "packinglist_id": {
                    "type": "integer"
                },
                "packinglist_products_id": {
                    "type": "integer"
                },
                "qcp5_attributes": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "qcp5_id": {
                    "type": "integer"
                },
                "qcp5_recommendations": {
                    "$ref": "#/definitions/api.Qcp4RecommendationRequest"
                },
                "qcp5product_id": {
                    "type": "integer"
                },
                "sampledboxes": {
                    "type": "integer"
                },
                "session_id": {
                    "type": "string"
                },
                "traceability_code": {
                    "type": "string"
                }
            }
        },
        "api.Qcp5OtherAttributeResponse": {
            "type": "object",
            "properties": {
                "qcp5_id": {
                    "type": "integer"
                },
                "qcp5_other_id": {
                    "type": "integer"
                },
                "qualityattributes_id": {
                    "type": "integer"
                }
            }
        },
        "api.Qcp5OtherInspectionRequest": {
            "type": "object",
            "properties": {
                "boxes": {
                    "type": "integer"
                },
                "exportcompany_id": {
                    "type": "integer"
                },
                "packinglist_products_id": {
                    "type": "integer"
                },
                "qcp5_attributes": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "qcp5_id": {
                    "type": "integer"
                },
                "qcp5_recommendations": {
                    "$ref": "#/definitions/api.Qcp4RecommendationRequest"
                },
                "qcp5product_id": {
                    "type": "integer"
                },
                "sampledboxes": {
                    "type": "integer"
                },
                "session_id": {
                    "type": "string"
                }
            }
        },
        "api.Qcp5OtherResponse": {
            "type": "object",
            "required": [
                "boxweight",
                "productnetweight",
                "total_product_grossweight",
                "total_product_weight"
            ],
            "properties": {
                "boxweight": {
                    "type": "number"
                },
                "noofboxes": {
                    "type": "integer"
                },
                "order_id": {
                    "type": "integer"
                },
                "otherattributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.Qcp5OtherAttributesContentRow"
                    }
                },
                "product_name": {
                    "type": "string"
                },
                "productnetweight": {
                    "type": "number"
                },
                "qcp5_rowid": {
                    "type": "integer"
                },
                "recommendations": {
                    "$ref": "#/definitions/db.Qcp5Otherrecommendation"
                },
                "sampled_boxes": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "total_product_grossweight": {
                    "type": "number"
                },
                "total_product_weight": {
                    "type": "number"
                }
            }
        },
        "api.Qcp5RecommendationResponse": {
            "type": "object",
            "properties": {
                "qcp5_id": {
                    "type": "integer"
                },
                "qcp5_product_id": {
                    "type": "integer"
                },
                "reason": {
                    "$ref": "#/definitions/sql.NullString"
                },
                "status": {
                    "type": "string"
                },
                "weight_passed": {
                    "type": "number"
                },
                "weight_rejected": {
                    "type": "number"
                }
            }
        },
        "api.Qcp5Response": {
            "type": "object",
            "required": [
                "boxweight",
                "productnetweight",
                "total_product_grossweight",
                "total_product_weight"
            ],
            "properties": {
                "attributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.Qcp5AttributesContentRow"
                    }
                },
                "boxweight": {
                    "type": "number"
                },
                "order_id": {
                    "type": "integer"
                },
                "packinglist_id": {
                    "type": "integer"
                },
                "product_id": {
                    "type": "integer"
                },
                "productname": {
                    "type": "string"
                },
                "productnetweight": {
                    "type": "number"
                },
                "qcp5_rowid": {
                    "type": "integer"
                },
                "recommendation": {
                    "$ref": "#/definitions/db.Qcp5Recommendation"
                },
                "sampledboxes": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "total_boxes": {
                    "type": "integer"
                },
                "total_product_grossweight": {
                    "type": "number"
                },
                "total_product_weight": {
                    "type": "number"
                },
                "traceability_code": {
                    "type": "string"
                }
            }
        },
        "api.Qcp5StatusReq": {
            "type": "object",
            "required": [
                "consignment_no",
                "consignment_status",
                "exportcompany_id"
            ],
            "properties": {
                "consignment_no": {
                    "type": "string"
                },
                "consignment_status": {
                    "type": "string"
                },
                "documentdate": {
                    "type": "string"
                },
                "documentnumber": {
                    "type": "string"
                },
                "exportcompany_id": {
                    "type": "integer"
                },
                "instructions": {
                    "type": "string"
                },
                "passedweight": {
                    "type": "number"
                },
                "reason": {
                    "type": "string"
                },
                "rejectedweight": {
                    "type": "number"
                },
                "target": {
                    "type": "string"
                }
            }
        },
        "api.QcpEmailResponse": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "fullname": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "api.QcpReqEmail": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "api.QualityAttributeRequest": {
            "type": "object",
            "required": [
                "description",
                "qcp1",
                "qcp2",
                "qcp3",
                "qcp4",
                "qcp5",
                "receptionform"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "qcp1": {
                    "type": "string"
                },
                "qcp2": {
                    "type": "string"
                },
                "qcp3": {
                    "type": "string"
                },
                "qcp4": {
                    "type": "string"
                },
                "qcp5": {
                    "type": "string"
                },
                "receptionform": {
                    "type": "string"
                }
            }
        },
        "api.QualityTypeAttribute": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "qcp1": {
                    "type": "boolean"
                },
                "qcp2": {
                    "type": "boolean"
                },
                "qcp3": {
                    "type": "boolean"
                },
                "qcp4": {
                    "type": "boolean"
                },
                "qcp5": {
                    "type": "boolean"
                },
                "receptionform": {
                    "type": "boolean"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "api.QualityattributeResType": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "qcp1": {
                    "type": "boolean"
                },
                "qcp2": {
                    "type": "boolean"
                },
                "qcp3": {
                    "type": "boolean"
                },
                "qcp4": {
                    "type": "boolean"
                },
                "qcp5": {
                    "type": "boolean"
                },
                "receptionform": {
                    "type": "boolean"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "api.ReasonRejectionRequest": {
            "type": "object",
            "required": [
                "reasoncode",
                "reasondescription"
            ],
            "properties": {
                "reasoncode": {
                    "type": "string"
                },
                "reasondescription": {
                    "type": "string"
                }
            }
        },
        "api.ReasonTyperejection": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "reasoncode": {
                    "type": "string"
                },
                "reasondescription": {
                    "type": "string"
                }
            }
        },
        "api.ReceptionCountType": {
            "type": "object",
            "properties": {
                "pending": {
                    "type": "string"
                },
                "rejected": {
                    "type": "string"
                },
                "submitted": {
                    "type": "string"
                }
            }
        },
        "api.ReceptionDocumentsRequests": {
            "type": "object",
            "required": [
                "document",
                "document_id",
                "reception_id"
            ],
            "properties": {
                "document": {
                    "$ref": "#/definitions/multipart.FileHeader"
                },
                "document_id": {
                    "type": "integer"
                },
                "reception_id": {
                    "type": "integer"
                }
            }
        },
        "api.ReceptionFormAttributesRequest": {
            "type": "object",
            "required": [
                "receptionform_id"
            ],
            "properties": {
                "others": {
                    "type": "string"
                },
                "percentage": {
                    "type": "number"
                },
                "qty_removed": {
                    "type": "number"
                },
                "qty_taken": {
                    "type": "number"
                },
                "qualityattributes": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "receptionform_id": {
                    "type": "integer"
                }
            }
        },
        "api.ReceptionFormRequest": {
            "type": "object",
            "required": [
                "batches",
                "carnumberplate",
                "crop_id",
                "deliverytime",
                "driversname",
                "modeoftransport_id",
                "netweight",
                "order_id",
                "session_id",
                "status",
                "supplier_id",
                "traceability_code"
            ],
            "properties": {
                "batches": {
                    "type": "integer",
                    "minimum": 1
                },
                "carnumberplate": {
                    "type": "string"
                },
                "crop_id": {
                    "type": "integer",
                    "minimum": 1
                },
                "deliverytime": {
                    "type": "string"
                },
                "driversname": {
                    "type": "string"
                },
                "finalharvestbalance": {
                    "type": "number"
                },
                "modeoftransport_id": {
                    "type": "integer",
                    "minimum": 1
                },
                "netweight": {
                    "type": "number",
                    "minimum": 1
                },
                "order_id": {
                    "type": "integer",
                    "minimum": 1
                },
                "previousharvestbalance": {
                    "type": "number"
                },
                "quantityrejected": {
                    "type": "number"
                },
                "session_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "supplier_id": {
                    "type": "integer"
                },
                "traceability_code": {
                    "type": "string"
                }
            }
        },
        "api.ReceptionTypeResponse": {
            "type": "object",
            "properties": {
                "receptiondetails": {
                    "type": "string"
                },
                "signature": {
                    "type": "string"
                },
                "stamp": {
                    "type": "string"
                }
            }
        },
        "api.ReceptionformType": {
            "type": "object",
            "properties": {
                "batches": {
                    "type": "integer"
                },
                "carnumberplate": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "crop_id": {
                    "type": "integer"
                },
                "deliverytime": {
                    "type": "string"
                },
                "driversname": {
                    "type": "string"
                },
                "exportcompany_id": {
                    "type": "integer"
                },
                "finalharvestbalance": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "modeoftransport_id": {
                    "type": "integer"
                },
                "netweight": {
                    "type": "number"
                },
                "order_id": {
                    "type": "integer"
                },
                "packhouse_id": {
                    "type": "integer"
                },
                "phytostatus": {
                    "type": "string"
                },
                "previousharvestbalance": {
                    "type": "number"
                },
                "quantityrejected": {
                    "type": "number"
                },
                "score": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "supplier_id": {
                    "type": "integer"
                },
                "traceability_code": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "api.RecommendationStatus": {
            "type": "string",
            "enum": [
                "FitForExport",
                "Rejected",
                "Resorting"
            ],
            "x-enum-varnames": [
                "FitForExport",
                "Rejected",
                "Resorting"
            ]
        },
        "api.RedFlagReq": {
            "type": "object",
            "required": [
                "crop_id",
                "farmer_id",
                "reason",
                "redflag",
                "traceability_code"
            ],
            "properties": {
                "crop_id": {
                    "type": "integer",
                    "minimum": 1
                },
                "farmer_id": {
                    "type": "integer",
                    "minimum": 1
                },
                "reason": {
                    "type": "string"
                },
                "redflag": {
                    "$ref": "#/definitions/api.RedFlagStage"
                },
                "traceability_code": {
                    "type": "string"
                }
            }
        },
        "api.RedFlagStage": {
            "type": "string",
            "enum": [
                "ReceptionForm",
                "Qcp1",
                "Qcp2",
                "Qcp3",
                "FarmerFarms"
            ],
            "x-enum-varnames": [
                "ReceptionForm",
                "Qcp_1",
                "Qcp_2",
                "Qcp_3",
                "FarmerFarms"
            ]
        },
        "api.RegStatuses": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "api.RejectionRequest": {
            "type": "object",
            "required": [
                "rejectioncode",
                "rejectiondescription"
            ],
            "properties": {
                "rejectioncode": {
                    "type": "string"
                },
                "rejectiondescription": {
                    "type": "string"
                }
            }
        },
        "api.RejectionType": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "rejectioncode": {
                    "type": "string"
                },
                "rejectiondescription": {
                    "type": "string"
                }
            }
        },
        "api.RemoveRedFlags": {
            "type": "object",
            "required": [
                "redflag_id"
            ],
            "properties": {
                "redflag_id": {
                    "type": "integer"
                }
            }
        },
        "api.ReportTypeResponse": {
            "type": "object",
            "properties": {
                "exporter_signature": {
                    "type": "string"
                },
                "exporter_stamp": {
                    "type": "string"
                },
                "inspector_stamp": {
                    "type": "string"
                },
                "reports": {},
                "suppliers": {
                    "type": "array",
                    "items": {}
                }
            }
        },
        "api.ReturnOrderByExportCompanyRow": {
            "type": "object",
            "properties": {
                "client_id": {
                    "type": "integer"
                },
                "companyname": {
                    "type": "string"
                },
                "consignment_no": {
                    "$ref": "#/definitions/sql.NullString"
                },
                "country_id": {
                    "type": "integer"
                },
                "countryname": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "exportcompany_id": {
                    "type": "integer"
                },
                "order_id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "api.RoasterRes": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "dayshift": {
                    "type": "boolean"
                },
                "exitpoint_id": {
                    "type": "integer"
                },
                "expcode": {
                    "type": "string"
                },
                "expdescription": {
                    "type": "string"
                },
                "fullname": {
                    "type": "string"
                },
                "nightshift": {
                    "type": "boolean"
                },
                "status": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "api.RoleRes": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "exportcompany_id": {
                    "$ref": "#/definitions/sql.NullInt32"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "api.Server": {
            "type": "object"
        },
        "api.SessionInfo": {
            "type": "object",
            "properties": {
                "exportcompany": {
                    "type": "string"
                },
                "exportcompany_id": {
                    "type": "integer"
                },
                "lat": {
                    "type": "number"
                },
                "long": {
                    "type": "number"
                },
                "packhouse": {
                    "type": "string"
                },
                "packhouse_id": {
                    "type": "integer"
                }
            }
        },
        "api.StatusReq": {
            "type": "object",
            "required": [
                "consignment_no",
                "status"
            ],
            "properties": {
                "consignment_no": {
                    "type": "string"
                },
                "reason": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/api.PlannedConsignmentStatus"
                }
            }
        },
        "api.StatusReqIn": {
            "type": "object",
            "properties": {
                "crop_id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "api.SubCountyRequest": {
            "type": "object",
            "required": [
                "district_id",
                "subcountycode",
                "subcountyname"
            ],
            "properties": {
                "district_id": {
                    "type": "integer"
                },
                "subcountycode": {
                    "type": "string"
                },
                "subcountyname": {
                    "type": "string"
                }
            }
        },
        "api.SubmissionReq": {
            "type": "object",
            "required": [
                "consignment_no"
            ],
            "properties": {
                "consignment_no": {
                    "type": "string"
                }
            }
        },
        "api.SuccessTypeResponse": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "string"
                }
            }
        },
        "api.SupportAccountRequest": {
            "type": "object",
            "required": [
                "email",
                "fullname",
                "nin",
                "phone",
                "regno"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "fullname": {
                    "type": "string"
                },
                "nin": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "regno": {
                    "type": "string"
                }
            }
        },
        "api.SwitchRequest": {
            "type": "object",
            "required": [
                "user_id",
                "user_type"
            ],
            "properties": {
                "user_id": {
                    "type": "integer"
                },
                "user_type": {
                    "$ref": "#/definitions/api.UserRoles"
                }
            }
        },
        "api.ToggleReq": {
            "type": "object",
            "required": [
                "status",
                "user_id"
            ],
            "properties": {
                "status": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "api.TrackStatusReq": {
            "type": "object",
            "required": [
                "session_id",
                "truck_instructions"
            ],
            "properties": {
                "comment": {
                    "type": "string"
                },
                "session_id": {
                    "type": "string"
                },
                "truck_instructions": {
                    "$ref": "#/definitions/api.TruckInstructions"
                }
            }
        },
        "api.TruckHygieneRequest": {
            "type": "object",
            "required": [
                "consignment_no",
                "date",
                "detergents_used",
                "refrigation_status"
            ],
            "properties": {
                "checklist": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "consignment_no": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "detergents_used": {
                    "type": "string"
                },
                "refrigation_status": {
                    "type": "string"
                }
            }
        },
        "api.TruckHygieneTypeResponse": {
            "type": "object",
            "properties": {
                "checklist": {
                    "type": "array",
                    "items": {}
                },
                "reports": {},
                "truckimage": {
                    "type": "string"
                }
            }
        },
        "api.TruckHygieneUpdate": {
            "type": "object",
            "required": [
                "consignment_no",
                "date",
                "detergents_used",
                "id",
                "refrigation_status"
            ],
            "properties": {
                "checklist": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "consignment_no": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "detergents_used": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "refrigation_status": {
                    "type": "string"
                }
            }
        },
        "api.TruckInstructions": {
            "type": "string",
            "enum": [
                "CleanTruck",
                "UseOtherMeans"
            ],
            "x-enum-varnames": [
                "CleanTruck",
                "UseOtherMeans"
            ]
        },
        "api.UpdaeDistrictReq": {
            "type": "object",
            "required": [
                "code",
                "id",
                "name"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "api.UpdateAirlineRequest": {
            "type": "object",
            "required": [
                "airlinecode",
                "airlinename",
                "id"
            ],
            "properties": {
                "airlinecode": {
                    "type": "string"
                },
                "airlinename": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "api.UpdateClientRequest": {
            "type": "object",
            "required": [
                "companyname",
                "contactemail",
                "contactname",
                "contactphone",
                "country_id",
                "exportcompany_id",
                "id"
            ],
            "properties": {
                "companyname": {
                    "type": "string"
                },
                "contactemail": {
                    "type": "string"
                },
                "contactname": {
                    "type": "string"
                },
                "contactphone": {
                    "type": "string"
                },
                "country_id": {
                    "type": "integer",
                    "minimum": 1
                },
                "exportcompany_id": {
                    "type": "integer",
                    "minimum": 1
                },
                "id": {
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "api.UpdateConsignmentReasonRejectionRequest": {
            "type": "object",
            "required": [
                "crr_code",
                "crr_description",
                "id"
            ],
            "properties": {
                "crr_code": {
                    "type": "string"
                },
                "crr_description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "api.UpdateConsignmentRejectionRequest": {
            "type": "object",
            "required": [
                "cd_code",
                "cd_description",
                "id"
            ],
            "properties": {
                "cd_code": {
                    "type": "string"
                },
                "cd_description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "api.UpdateConsignmentRequest": {
            "type": "object",
            "required": [
                "cd_code",
                "cd_description",
                "id"
            ],
            "properties": {
                "cd_code": {
                    "type": "string"
                },
                "cd_description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "api.UpdateEmailRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "minLength": 6
                },
                "password": {
                    "type": "string",
                    "minLength": 6
                }
            }
        },
        "api.UpdateExitHandlerRequest": {
            "type": "object",
            "required": [
                "exhcode",
                "exhdescription",
                "exitpoint_id",
                "id"
            ],
            "properties": {
                "exhcode": {
                    "type": "string"
                },
                "exhdescription": {
                    "type": "string"
                },
                "exitpoint_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "api.UpdateExitPointRequest": {
            "type": "object",
            "required": [
                "district",
                "expcode",
                "expdescription",
                "expwhatsapp",
                "id",
                "mot_id",
                "parish",
                "village"
            ],
            "properties": {
                "district": {
                    "type": "integer"
                },
                "expcode": {
                    "type": "string"
                },
                "expdescription": {
                    "type": "string"
                },
                "expwhatsapp": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "mot_id": {
                    "type": "integer"
                },
                "parish": {
                    "type": "integer"
                },
                "village": {
                    "type": "integer"
                }
            }
        },
        "api.UpdateExportCompanyRequest": {
            "type": "object",
            "required": [
                "expaddress1",
                "expcompanyphone",
                "expdistrict",
                "expemail",
                "expname",
                "expparish",
                "expregno",
                "exprexno",
                "expvillage",
                "id"
            ],
            "properties": {
                "expaddress1": {
                    "type": "string"
                },
                "expcompanyphone": {
                    "type": "string"
                },
                "expdistrict": {
                    "type": "integer"
                },
                "expemail": {
                    "type": "string"
                },
                "expname": {
                    "type": "string"
                },
                "expparish": {
                    "type": "integer"
                },
                "expregno": {
                    "type": "string"
                },
                "exprexno": {
                    "type": "string"
                },
                "expvillage": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "api.UpdateModeOfTransportRequest": {
            "type": "object",
            "required": [
                "id",
                "motdescription",
                "to_destination",
                "to_exit",
                "to_packhouse"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "motdescription": {
                    "type": "string"
                },
                "to_destination": {
                    "type": "boolean"
                },
                "to_exit": {
                    "type": "boolean"
                },
                "to_packhouse": {
                    "type": "boolean"
                }
            }
        },
        "api.UpdateOrderRequest": {
            "type": "object",
            "required": [
                "client_id",
                "id"
            ],
            "properties": {
                "client_id": {
                    "type": "integer",
                    "minimum": 1
                },
                "id": {
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "api.UpdateOrderWeightReq": {
            "type": "object",
            "required": [
                "crop_id",
                "order_id",
                "weight"
            ],
            "properties": {
                "crop_id": {
                    "type": "integer",
                    "minimum": 1
                },
                "order_id": {
                    "type": "integer",
                    "minimum": 1
                },
                "weight": {
                    "type": "number"
                }
            }
        },
        "api.UpdatePackHouseRequest": {
            "type": "object",
            "required": [
                "contactemail",
                "contactname",
                "contactphone",
                "district",
                "expiry_date",
                "lat",
                "long",
                "packhouse_id",
                "parish",
                "phname",
                "phregno",
                "streetaddress",
                "village"
            ],
            "properties": {
                "contactemail": {
                    "type": "string"
                },
                "contactname": {
                    "type": "string"
                },
                "contactphone": {
                    "type": "string"
                },
                "district": {
                    "type": "integer"
                },
                "expiry_date": {
                    "type": "string"
                },
                "lat": {
                    "type": "number"
                },
                "long": {
                    "type": "number"
                },
                "packhouse_id": {
                    "type": "integer"
                },
                "parish": {
                    "type": "integer"
                },
                "phname": {
                    "type": "string"
                },
                "phregno": {
                    "type": "string"
                },
                "streetaddress": {
                    "type": "string"
                },
                "village": {
                    "type": "integer"
                }
            }
        },
        "api.UpdatePackageTypeRequest": {
            "type": "object",
            "required": [
                "id",
                "pgcode",
                "pgdescription"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "pgcode": {
                    "type": "string"
                },
                "pgdescription": {
                    "type": "string"
                }
            }
        },
        "api.UpdateParishReq": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "parish": {
                    "type": "string"
                },
                "subcounty_id": {
                    "type": "integer"
                }
            }
        },
        "api.UpdateProductDocumentTypeRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "minimum": 1
                },
                "pddocumentcode": {
                    "type": "string"
                },
                "pddocumentdescription": {
                    "type": "string"
                }
            }
        },
        "api.UpdateProductRequest": {
            "type": "object",
            "required": [
                "ciccode",
                "crophscode",
                "cropname",
                "id",
                "riskstatus"
            ],
            "properties": {
                "ciccode": {
                    "type": "string"
                },
                "crophscode": {
                    "type": "string"
                },
                "cropname": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "minimum": 1
                },
                "riskstatus": {
                    "type": "string"
                }
            }
        },
        "api.UpdateQualityAttributeRequest": {
            "type": "object",
            "required": [
                "description",
                "id"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "api.UpdateReasonRejectionRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "minimum": 1
                },
                "pddocumentcode": {
                    "type": "string"
                },
                "pddocumentdescription": {
                    "type": "string"
                }
            }
        },
        "api.UpdateReceptionFormAttributesRequest": {
            "type": "object",
            "required": [
                "receptionform_id"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "others": {
                    "type": "string"
                },
                "percentage": {
                    "type": "number"
                },
                "qty_removed": {
                    "type": "number"
                },
                "qty_taken": {
                    "type": "number"
                },
                "qualityattributes": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "receptionform_id": {
                    "type": "integer"
                }
            }
        },
        "api.UpdateRedFlags": {
            "type": "object",
            "required": [
                "reason",
                "redflag_id",
                "status"
            ],
            "properties": {
                "reason": {
                    "type": "string"
                },
                "redflag_id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "api.UpdateRejectionRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "minimum": 1
                },
                "rejectioncode": {
                    "type": "string"
                },
                "rejectiondescription": {
                    "type": "string"
                }
            }
        },
        "api.UpdateReq": {
            "type": "object",
            "properties": {
                "packinglist_details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.PackingListRequest"
                    }
                },
                "packinglist_id": {
                    "type": "integer"
                },
                "packinglist_others": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.PackOthers"
                    }
                }
            }
        },
        "api.UpdateReqLink": {
            "type": "object",
            "required": [
                "confirmpassword",
                "password",
                "session_id"
            ],
            "properties": {
                "confirmpassword": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "session_id": {
                    "type": "string"
                }
            }
        },
        "api.UpdateStatusReq": {
            "type": "object",
            "required": [
                "consignment_no"
            ],
            "properties": {
                "consignment_no": {
                    "type": "string"
                },
                "packinglist_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "api.UpdateSubcountyRequest": {
            "type": "object",
            "required": [
                "district_id",
                "id",
                "subcountycode",
                "subcountyname"
            ],
            "properties": {
                "district_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer",
                    "minimum": 1
                },
                "subcountycode": {
                    "type": "string"
                },
                "subcountyname": {
                    "type": "string"
                }
            }
        },
        "api.UpdateUserRequest": {
            "type": "object",
            "required": [
                "confirmpassword",
                "password"
            ],
            "properties": {
                "confirmpassword": {
                    "type": "string",
                    "minLength": 6
                },
                "password": {
                    "type": "string",
                    "minLength": 6
                }
            }
        },
        "api.UpdateVillageReq": {
            "type": "object",
            "required": [
                "code",
                "id",
                "parish_id",
                "village"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "parish_id": {
                    "type": "integer"
                },
                "village": {
                    "type": "string"
                }
            }
        },
        "api.UserDetailsReq": {
            "type": "object",
            "required": [
                "fullname"
            ],
            "properties": {
                "fullname": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "api.UserExporterReq": {
            "type": "object",
            "required": [
                "exporter_id",
                "user_id"
            ],
            "properties": {
                "exporter_id": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "api.UserResType": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "fullname": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "nin": {
                    "$ref": "#/definitions/sql.NullString"
                },
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "regno": {
                    "$ref": "#/definitions/sql.NullString"
                },
                "signature": {
                    "$ref": "#/definitions/sql.NullString"
                },
                "stamp": {
                    "$ref": "#/definitions/sql.NullString"
                },
                "status": {
                    "$ref": "#/definitions/sql.NullString"
                },
                "user_type": {
                    "type": "string"
                }
            }
        },
        "api.UserRoles": {
            "type": "string",
            "enum": [
                "PACKHOUSE-INSPECTOR",
                "DCIC-ADMIN",
                "EXPORTER",
                "QUALITY-CONTROLLER",
                "MANAGER",
                "BORDER-INSPECTOR"
            ],
            "x-enum-varnames": [
                "PACKHOUSEINSPECTOR",
                "DCICADMIN",
                "EXPORTER",
                "QUALITYCONTROLLER",
                "MANAGER",
                "BORDERINSPECTOR"
            ]
        },
        "api.UserStatusToggle": {
            "type": "object",
            "required": [
                "status",
                "user_id",
                "user_type"
            ],
            "properties": {
                "status": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                },
                "user_type": {
                    "type": "string"
                }
            }
        },
        "api.VillageCreate": {
            "type": "object",
            "required": [
                "code",
                "name",
                "parish_id"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "parish_id": {
                    "type": "integer"
                }
            }
        },
        "api.VillageRes": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "parish_id": {
                    "type": "integer"
                },
                "village": {
                    "type": "string"
                }
            }
        },
        "api.VillageResp": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "district_code": {
                    "type": "string"
                },
                "district_id": {
                    "type": "integer"
                },
                "district_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "parish": {
                    "type": "string"
                },
                "parish_id": {
                    "type": "integer"
                },
                "subcounty_id": {
                    "type": "integer"
                },
                "village": {
                    "type": "string"
                }
            }
        },
        "api.VillageRespi": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "parish_id": {
                    "type": "integer"
                },
                "village": {
                    "type": "string"
                }
            }
        },
        "api.ZonReq": {
            "type": "object",
            "required": [
                "districts",
                "zone_name"
            ],
            "properties": {
                "districts": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "zone_name": {
                    "type": "string"
                }
            }
        },
        "api.loginUserRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 6
                }
            }
        },
        "api.loginUserResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "access_token_expires_at": {
                    "type": "string"
                },
                "details": {
                    "$ref": "#/definitions/db.Exitpoint"
                },
                "exitpoint_id": {
                    "type": "integer"
                },
                "refresh_token": {
                    "type": "string"
                },
                "refresh_token_expires_at": {
                    "type": "string"
                },
                "session_id": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/api.CreateUserResponse"
                }
            }
        },
        "api.logoReq": {
            "type": "object",
            "required": [
                "exportcompany_id",
                "logo"
            ],
            "properties": {
                "exportcompany_id": {
                    "type": "integer"
                },
                "logo": {
                    "$ref": "#/definitions/multipart.FileHeader"
                }
            }
        },
        "api.subcountyRes": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "district_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "api.trackhygienelist": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "requirement": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "big.Int": {
            "type": "object"
        },
        "db.CropsOnOrdersRow": {
            "type": "object",
            "properties": {
                "cropname": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "variant": {
                    "type": "string"
                },
                "weight": {
                    "type": "number"
                },
                "weightreceived": {
                    "$ref": "#/definitions/sql.NullFloat64"
                }
            }
        },
        "db.Exitpoint": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "district_id": {
                    "type": "integer"
                },
                "expcode": {
                    "type": "string"
                },
                "expdescription": {
                    "type": "string"
                },
                "expwhatsapp": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "latitude": {
                    "type": "number"
                },
                "longtitude": {
                    "type": "number"
                },
                "modeoftransport_id": {
                    "type": "integer"
                },
                "parish_id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "village_id": {
                    "type": "integer"
                }
            }
        },
        "db.FarmsRequestTx": {
            "type": "object",
            "required": [
                "acreage",
                "crop_id",
                "district",
                "lat",
                "long",
                "parish",
                "planting_date",
                "subcounty",
                "village"
            ],
            "properties": {
                "acreage": {
                    "type": "number"
                },
                "crop_id": {
                    "type": "integer"
                },
                "district": {
                    "type": "integer"
                },
                "lat": {
                    "type": "number"
                },
                "long": {
                    "type": "number"
                },
                "parish": {
                    "type": "integer"
                },
                "planting_date": {
                    "type": "string"
                },
                "subcounty": {
                    "type": "integer"
                },
                "village": {
                    "type": "integer"
                }
            }
        },
        "db.Qcp1": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "exportcompany_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "receptionform_id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                },
                "weightpassed": {
                    "type": "number"
                }
            }
        },
        "db.Qcp5AttributesContentRow": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "qcp5_id": {
                    "type": "integer"
                }
            }
        },
        "db.Qcp5OtherAttributesContentRow": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "product_name": {
                    "type": "string"
                }
            }
        },
        "db.Qcp5Otherrecommendation": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "exportcompany_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "qcp5_id": {
                    "type": "integer"
                },
                "qcp5_others_id": {
                    "type": "integer"
                },
                "reason": {
                    "$ref": "#/definitions/sql.NullString"
                },
                "status": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                },
                "weight_passed": {
                    "type": "number"
                },
                "weight_rejected": {
                    "type": "number"
                }
            }
        },
        "db.Qcp5Recommendation": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "exportcompany_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "qcp5_id": {
                    "type": "integer"
                },
                "qcp5_product_id": {
                    "type": "integer"
                },
                "reason": {
                    "$ref": "#/definitions/sql.NullString"
                },
                "status": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                },
                "weight_passed": {
                    "type": "number"
                },
                "weight_rejected": {
                    "type": "number"
                }
            }
        },
        "db.Store": {
            "type": "object"
        },
        "gin.Context": {
            "type": "object",
            "properties": {
                "accepted": {
                    "description": "Accepted defines a list of manually accepted formats for content negotiation.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "errors": {
                    "description": "Errors is a list of errors attached to all the handlers/middlewares who used this context.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/gin.Error"
                    }
                },
                "keys": {
                    "description": "Keys is a key/value pair exclusively for the context of each request.",
                    "type": "object",
                    "additionalProperties": {}
                },
                "params": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/gin.Param"
                    }
                },
                "request": {
                    "$ref": "#/definitions/http.Request"
                },
                "writer": {}
            }
        },
        "gin.Error": {
            "type": "object",
            "properties": {
                "err": {},
                "meta": {},
                "type": {
                    "$ref": "#/definitions/gin.ErrorType"
                }
            }
        },
        "gin.ErrorType": {
            "type": "integer",
            "enum": [
                -9223372036854775808,
                4611686018427387904,
                1,
                2,
                -1
            ],
            "x-enum-varnames": [
                "ErrorTypeBind",
                "ErrorTypeRender",
                "ErrorTypePrivate",
                "ErrorTypePublic",
                "ErrorTypeAny"
            ]
        },
        "gin.H": {
            "type": "object",
            "additionalProperties": {}
        },
        "gin.Param": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "http.Header": {
            "type": "object",
            "additionalProperties": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            }
        },
        "http.Request": {
            "type": "object",
            "properties": {
                "body": {
                    "description": "Body is the request's body.\n\nFor client requests, a nil body means the request has no\nbody, such as a GET request. The HTTP Client's Transport\nis responsible for calling the Close method.\n\nFor server requests, the Request Body is always non-nil\nbut will return EOF immediately when no body is present.\nThe Server will close the request body. The ServeHTTP\nHandler does not need to.\n\nBody must allow Read to be called concurrently with Close.\nIn particular, calling Close should unblock a Read waiting\nfor input."
                },
                "cancel": {
                    "description": "Cancel is an optional channel whose closure indicates that the client\nrequest should be regarded as canceled. Not all implementations of\nRoundTripper may support Cancel.\n\nFor server requests, this field is not applicable.\n\nDeprecated: Set the Request's context with NewRequestWithContext\ninstead. If a Request's Cancel field and context are both\nset, it is undefined whether Cancel is respected.",
                    "type": "object"
                },
                "close": {
                    "description": "Close indicates whether to close the connection after\nreplying to this request (for servers) or after sending this\nrequest and reading its response (for clients).\n\nFor server requests, the HTTP server handles this automatically\nand this field is not needed by Handlers.\n\nFor client requests, setting this field prevents re-use of\nTCP connections between requests to the same hosts, as if\nTransport.DisableKeepAlives were set.",
                    "type": "boolean"
                },
                "contentLength": {
                    "description": "ContentLength records the length of the associated content.\nThe value -1 indicates that the length is unknown.\nValues \u003e= 0 indicate that the given number of bytes may\nbe read from Body.\n\nFor client requests, a value of 0 with a non-nil Body is\nalso treated as unknown.",
                    "type": "integer"
                },
                "form": {
                    "description": "Form contains the parsed form data, including both the URL\nfield's query parameters and the PATCH, POST, or PUT form data.\nThis field is only available after ParseForm is called.\nThe HTTP client ignores Form and uses Body instead.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/url.Values"
                        }
                    ]
                },
                "header": {
                    "description": "Header contains the request header fields either received\nby the server or to be sent by the client.\n\nIf a server received a request with header lines,\n\n\tHost: example.com\n\taccept-encoding: gzip, deflate\n\tAccept-Language: en-us\n\tfOO: Bar\n\tfoo: two\n\nthen\n\n\tHeader = map[string][]string{\n\t\t\"Accept-Encoding\": {\"gzip, deflate\"},\n\t\t\"Accept-Language\": {\"en-us\"},\n\t\t\"Foo\": {\"Bar\", \"two\"},\n\t}\n\nFor incoming requests, the Host header is promoted to the\nRequest.Host field and removed from the Header map.\n\nHTTP defines that header names are case-insensitive. The\nrequest parser implements this by using CanonicalHeaderKey,\nmaking the first character and any characters following a\nhyphen uppercase and the rest lowercase.\n\nFor client requests, certain headers such as Content-Length\nand Connection are automatically written when needed and\nvalues in Header may be ignored. See the documentation\nfor the Request.Write method.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/http.Header"
                        }
                    ]
                },
                "host": {
                    "description": "For server requests, Host specifies the host on which the\nURL is sought. For HTTP/1 (per RFC 7230, section 5.4), this\nis either the value of the \"Host\" header or the host name\ngiven in the URL itself. For HTTP/2, it is the value of the\n\":authority\" pseudo-header field.\nIt may be of the form \"host:port\". For international domain\nnames, Host may be in Punycode or Unicode form. Use\ngolang.org/x/net/idna to convert it to either format if\nneeded.\nTo prevent DNS rebinding attacks, server Handlers should\nvalidate that the Host header has a value for which the\nHandler considers itself authoritative. The included\nServeMux supports patterns registered to particular host\nnames and thus protects its registered Handlers.\n\nFor client requests, Host optionally overrides the Host\nheader to send. If empty, the Request.Write method uses\nthe value of URL.Host. Host may contain an international\ndomain name.",
                    "type": "string"
                },
                "method": {
                    "description": "Method specifies the HTTP method (GET, POST, PUT, etc.).\nFor client requests, an empty string means GET.",
                    "type": "string"
                },
                "multipartForm": {
                    "description": "MultipartForm is the parsed multipart form, including file uploads.\nThis field is only available after ParseMultipartForm is called.\nThe HTTP client ignores MultipartForm and uses Body instead.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/multipart.Form"
                        }
                    ]
                },
                "postForm": {
                    "description": "PostForm contains the parsed form data from PATCH, POST\nor PUT body parameters.\n\nThis field is only available after ParseForm is called.\nThe HTTP client ignores PostForm and uses Body instead.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/url.Values"
                        }
                    ]
                },
                "proto": {
                    "description": "The protocol version for incoming server requests.\n\nFor client requests, these fields are ignored. The HTTP\nclient code always uses either HTTP/1.1 or HTTP/2.\nSee the docs on Transport for details.",
                    "type": "string"
                },
                "protoMajor": {
                    "description": "1",
                    "type": "integer"
                },
                "protoMinor": {
                    "description": "0",
                    "type": "integer"
                },
                "remoteAddr": {
                    "description": "RemoteAddr allows HTTP servers and other software to record\nthe network address that sent the request, usually for\nlogging. This field is not filled in by ReadRequest and\nhas no defined format. The HTTP server in this package\nsets RemoteAddr to an \"IP:port\" address before invoking a\nhandler.\nThis field is ignored by the HTTP client.",
                    "type": "string"
                },
                "requestURI": {
                    "description": "RequestURI is the unmodified request-target of the\nRequest-Line (RFC 7230, Section 3.1.1) as sent by the client\nto a server. Usually the URL field should be used instead.\nIt is an error to set this field in an HTTP client request.",
                    "type": "string"
                },
                "response": {
                    "description": "Response is the redirect response which caused this request\nto be created. This field is only populated during client\nredirects.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/http.Response"
                        }
                    ]
                },
                "tls": {
                    "description": "TLS allows HTTP servers and other software to record\ninformation about the TLS connection on which the request\nwas received. This field is not filled in by ReadRequest.\nThe HTTP server in this package sets the field for\nTLS-enabled connections before invoking a handler;\notherwise it leaves the field nil.\nThis field is ignored by the HTTP client.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/tls.ConnectionState"
                        }
                    ]
                },
                "trailer": {
                    "description": "Trailer specifies additional headers that are sent after the request\nbody.\n\nFor server requests, the Trailer map initially contains only the\ntrailer keys, with nil values. (The client declares which trailers it\nwill later send.)  While the handler is reading from Body, it must\nnot reference Trailer. After reading from Body returns EOF, Trailer\ncan be read again and will contain non-nil values, if they were sent\nby the client.\n\nFor client requests, Trailer must be initialized to a map containing\nthe trailer keys to later send. The values may be nil or their final\nvalues. The ContentLength must be 0 or -1, to send a chunked request.\nAfter the HTTP request is sent the map values can be updated while\nthe request body is read. Once the body returns EOF, the caller must\nnot mutate Trailer.\n\nFew HTTP clients, servers, or proxies support HTTP trailers.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/http.Header"
                        }
                    ]
                },
                "transferEncoding": {
                    "description": "TransferEncoding lists the transfer encodings from outermost to\ninnermost. An empty list denotes the \"identity\" encoding.\nTransferEncoding can usually be ignored; chunked encoding is\nautomatically added and removed as necessary when sending and\nreceiving requests.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "url": {
                    "description": "URL specifies either the URI being requested (for server\nrequests) or the URL to access (for client requests).\n\nFor server requests, the URL is parsed from the URI\nsupplied on the Request-Line as stored in RequestURI.  For\nmost requests, fields other than Path and RawQuery will be\nempty. (See RFC 7230, Section 5.3)\n\nFor client requests, the URL's Host specifies the server to\nconnect to, while the Request's Host field optionally\nspecifies the Host header value to send in the HTTP\nrequest.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/url.URL"
                        }
                    ]
                }
            }
        },
        "http.Response": {
            "type": "object",
            "properties": {
                "body": {
                    "description": "Body represents the response body.\n\nThe response body is streamed on demand as the Body field\nis read. If the network connection fails or the server\nterminates the response, Body.Read calls return an error.\n\nThe http Client and Transport guarantee that Body is always\nnon-nil, even on responses without a body or responses with\na zero-length body. It is the caller's responsibility to\nclose Body. The default HTTP client's Transport may not\nreuse HTTP/1.x \"keep-alive\" TCP connections if the Body is\nnot read to completion and closed.\n\nThe Body is automatically dechunked if the server replied\nwith a \"chunked\" Transfer-Encoding.\n\nAs of Go 1.12, the Body will also implement io.Writer\non a successful \"101 Switching Protocols\" response,\nas used by WebSockets and HTTP/2's \"h2c\" mode."
                },
                "close": {
                    "description": "Close records whether the header directed that the connection be\nclosed after reading Body. The value is advice for clients: neither\nReadResponse nor Response.Write ever closes a connection.",
                    "type": "boolean"
                },
                "contentLength": {
                    "description": "ContentLength records the length of the associated content. The\nvalue -1 indicates that the length is unknown. Unless Request.Method\nis \"HEAD\", values \u003e= 0 indicate that the given number of bytes may\nbe read from Body.",
                    "type": "integer"
                },
                "header": {
                    "description": "Header maps header keys to values. If the response had multiple\nheaders with the same key, they may be concatenated, with comma\ndelimiters.  (RFC 7230, section 3.2.2 requires that multiple headers\nbe semantically equivalent to a comma-delimited sequence.) When\nHeader values are duplicated by other fields in this struct (e.g.,\nContentLength, TransferEncoding, Trailer), the field values are\nauthoritative.\n\nKeys in the map are canonicalized (see CanonicalHeaderKey).",
                    "allOf": [
                        {
                            "$ref": "#/definitions/http.Header"
                        }
                    ]
                },
                "proto": {
                    "description": "e.g. \"HTTP/1.0\"",
                    "type": "string"
                },
                "protoMajor": {
                    "description": "e.g. 1",
                    "type": "integer"
                },
                "protoMinor": {
                    "description": "e.g. 0",
                    "type": "integer"
                },
                "request": {
                    "description": "Request is the request that was sent to obtain this Response.\nRequest's Body is nil (having already been consumed).\nThis is only populated for Client requests.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/http.Request"
                        }
                    ]
                },
                "status": {
                    "description": "e.g. \"200 OK\"",
                    "type": "string"
                },
                "statusCode": {
                    "description": "e.g. 200",
                    "type": "integer"
                },
                "tls": {
                    "description": "TLS contains information about the TLS connection on which the\nresponse was received. It is nil for unencrypted responses.\nThe pointer is shared between responses and should not be\nmodified.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/tls.ConnectionState"
                        }
                    ]
                },
                "trailer": {
                    "description": "Trailer maps trailer keys to values in the same\nformat as Header.\n\nThe Trailer initially contains only nil values, one for\neach key specified in the server's \"Trailer\" header\nvalue. Those values are not added to Header.\n\nTrailer must not be accessed concurrently with Read calls\non the Body.\n\nAfter Body.Read has returned io.EOF, Trailer will contain\nany trailer values sent by the server.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/http.Header"
                        }
                    ]
                },
                "transferEncoding": {
                    "description": "Contains transfer encodings from outer-most to inner-most. Value is\nnil, means that \"identity\" encoding is used.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "uncompressed": {
                    "description": "Uncompressed reports whether the response was sent compressed but\nwas decompressed by the http package. When true, reading from\nBody yields the uncompressed content instead of the compressed\ncontent actually set from the server, ContentLength is set to -1,\nand the \"Content-Length\" and \"Content-Encoding\" fields are deleted\nfrom the responseHeader. To get the original response from\nthe server, set Transport.DisableCompression to true.",
                    "type": "boolean"
                }
            }
        },
        "multipart.FileHeader": {
            "type": "object",
            "properties": {
                "filename": {
                    "type": "string"
                },
                "header": {
                    "$ref": "#/definitions/textproto.MIMEHeader"
                },
                "size": {
                    "type": "integer"
                }
            }
        },
        "multipart.Form": {
            "type": "object",
            "properties": {
                "file": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/multipart.FileHeader"
                        }
                    }
                },
                "value": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "net.IPNet": {
            "type": "object",
            "properties": {
                "ip": {
                    "description": "network number",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "mask": {
                    "description": "network mask",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "pkix.AttributeTypeAndValue": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "value": {}
            }
        },
        "pkix.Extension": {
            "type": "object",
            "properties": {
                "critical": {
                    "type": "boolean"
                },
                "id": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "value": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "pkix.Name": {
            "type": "object",
            "properties": {
                "country": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "extraNames": {
                    "description": "ExtraNames contains attributes to be copied, raw, into any marshaled\ndistinguished names. Values override any attributes with the same OID.\nThe ExtraNames field is not populated when parsing, see Names.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pkix.AttributeTypeAndValue"
                    }
                },
                "locality": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "names": {
                    "description": "Names contains all parsed attributes. When parsing distinguished names,\nthis can be used to extract non-standard attributes that are not parsed\nby this package. When marshaling to RDNSequences, the Names field is\nignored, see ExtraNames.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pkix.AttributeTypeAndValue"
                    }
                },
                "serialNumber": {
                    "type": "string"
                },
                "streetAddress": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "sql.NullFloat64": {
            "type": "object",
            "properties": {
                "float64": {
                    "type": "number"
                },
                "valid": {
                    "description": "Valid is true if Float64 is not NULL",
                    "type": "boolean"
                }
            }
        },
        "sql.NullInt32": {
            "type": "object",
            "properties": {
                "int32": {
                    "type": "integer"
                },
                "valid": {
                    "description": "Valid is true if Int32 is not NULL",
                    "type": "boolean"
                }
            }
        },
        "sql.NullString": {
            "type": "object",
            "properties": {
                "string": {
                    "type": "string"
                },
                "valid": {
                    "description": "Valid is true if String is not NULL",
                    "type": "boolean"
                }
            }
        },
        "textproto.MIMEHeader": {
            "type": "object",
            "additionalProperties": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            }
        },
        "time.Duration": {
            "type": "integer",
            "enum": [
                -9223372036854775808,
                9223372036854775807,
                1,
                1000,
                1000000,
                1000000000,
                60000000000,
                3600000000000,
                -9223372036854775808,
                9223372036854775807,
                1,
                1000,
                1000000,
                1000000000,
                60000000000,
                3600000000000
            ],
            "x-enum-varnames": [
                "minDuration",
                "maxDuration",
                "Nanosecond",
                "Microsecond",
                "Millisecond",
                "Second",
                "Minute",
                "Hour",
                "minDuration",
                "maxDuration",
                "Nanosecond",
                "Microsecond",
                "Millisecond",
                "Second",
                "Minute",
                "Hour"
            ]
        },
        "tls.ConnectionState": {
            "type": "object",
            "properties": {
                "cipherSuite": {
                    "description": "CipherSuite is the cipher suite negotiated for the connection (e.g.\nTLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256, TLS_AES_128_GCM_SHA256).",
                    "type": "integer"
                },
                "didResume": {
                    "description": "DidResume is true if this connection was successfully resumed from a\nprevious session with a session ticket or similar mechanism.",
                    "type": "boolean"
                },
                "handshakeComplete": {
                    "description": "HandshakeComplete is true if the handshake has concluded.",
                    "type": "boolean"
                },
                "negotiatedProtocol": {
                    "description": "NegotiatedProtocol is the application protocol negotiated with ALPN.",
                    "type": "string"
                },
                "negotiatedProtocolIsMutual": {
                    "description": "NegotiatedProtocolIsMutual used to indicate a mutual NPN negotiation.\n\nDeprecated: this value is always true.",
                    "type": "boolean"
                },
                "ocspresponse": {
                    "description": "OCSPResponse is a stapled Online Certificate Status Protocol (OCSP)\nresponse provided by the peer for the leaf certificate, if any.",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "peerCertificates": {
                    "description": "PeerCertificates are the parsed certificates sent by the peer, in the\norder in which they were sent. The first element is the leaf certificate\nthat the connection is verified against.\n\nOn the client side, it can't be empty. On the server side, it can be\nempty if Config.ClientAuth is not RequireAnyClientCert or\nRequireAndVerifyClientCert.\n\nPeerCertificates and its contents should not be modified.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/x509.Certificate"
                    }
                },
                "serverName": {
                    "description": "ServerName is the value of the Server Name Indication extension sent by\nthe client. It's available both on the server and on the client side.",
                    "type": "string"
                },
                "signedCertificateTimestamps": {
                    "description": "SignedCertificateTimestamps is a list of SCTs provided by the peer\nthrough the TLS handshake for the leaf certificate, if any.",
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "tlsunique": {
                    "description": "TLSUnique contains the \"tls-unique\" channel binding value (see RFC 5929,\nSection 3). This value will be nil for TLS 1.3 connections and for\nresumed connections that don't support Extended Master Secret (RFC 7627).",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "verifiedChains": {
                    "description": "VerifiedChains is a list of one or more chains where the first element is\nPeerCertificates[0] and the last element is from Config.RootCAs (on the\nclient side) or Config.ClientCAs (on the server side).\n\nOn the client side, it's set if Config.InsecureSkipVerify is false. On\nthe server side, it's set if Config.ClientAuth is VerifyClientCertIfGiven\n(and the peer provided a certificate) or RequireAndVerifyClientCert.\n\nVerifiedChains and its contents should not be modified.",
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/x509.Certificate"
                        }
                    }
                },
                "version": {
                    "description": "Version is the TLS version used by the connection (e.g. VersionTLS12).",
                    "type": "integer"
                }
            }
        },
        "url.URL": {
            "type": "object",
            "properties": {
                "forceQuery": {
                    "description": "append a query ('?') even if RawQuery is empty",
                    "type": "boolean"
                },
                "fragment": {
                    "description": "fragment for references, without '#'",
                    "type": "string"
                },
                "host": {
                    "description": "host or host:port (see Hostname and Port methods)",
                    "type": "string"
                },
                "omitHost": {
                    "description": "do not emit empty host (authority)",
                    "type": "boolean"
                },
                "opaque": {
                    "description": "encoded opaque data",
                    "type": "string"
                },
                "path": {
                    "description": "path (relative paths may omit leading slash)",
                    "type": "string"
                },
                "rawFragment": {
                    "description": "encoded fragment hint (see EscapedFragment method)",
                    "type": "string"
                },
                "rawPath": {
                    "description": "encoded path hint (see EscapedPath method)",
                    "type": "string"
                },
                "rawQuery": {
                    "description": "encoded query values, without '?'",
                    "type": "string"
                },
                "scheme": {
                    "type": "string"
                },
                "user": {
                    "description": "username and password information",
                    "allOf": [
                        {
                            "$ref": "#/definitions/url.Userinfo"
                        }
                    ]
                }
            }
        },
        "url.Userinfo": {
            "type": "object"
        },
        "url.Values": {
            "type": "object",
            "additionalProperties": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            }
        },
        "util.Config": {
            "type": "object",
            "properties": {
                "accessTokenDuration": {
                    "$ref": "#/definitions/time.Duration"
                },
                "apikey": {
                    "type": "string"
                },
                "appurl": {
                    "type": "string"
                },
                "dbdatabase": {
                    "type": "string"
                },
                "dbdriver": {
                    "type": "string"
                },
                "dbsource": {
                    "type": "string"
                },
                "dbuser": {
                    "type": "string"
                },
                "emailSenderAddress": {
                    "type": "string"
                },
                "emailSenderName": {
                    "type": "string"
                },
                "emailSenderPassword": {
                    "type": "string"
                },
                "refreshTokenDuration": {
                    "$ref": "#/definitions/time.Duration"
                },
                "serverAddress": {
                    "type": "string"
                },
                "smsgateway": {
                    "type": "string"
                },
                "symmetricKey": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "x509.Certificate": {
            "type": "object",
            "properties": {
                "authorityKeyId": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "basicConstraintsValid": {
                    "description": "BasicConstraintsValid indicates whether IsCA, MaxPathLen,\nand MaxPathLenZero are valid.",
                    "type": "boolean"
                },
                "crldistributionPoints": {
                    "description": "CRL Distribution Points",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "dnsnames": {
                    "description": "Subject Alternate Name values. (Note that these values may not be valid\nif invalid values were contained within a parsed certificate. For\nexample, an element of DNSNames may not be a valid DNS domain name.)",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "emailAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "excludedDNSDomains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "excludedEmailAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "excludedIPRanges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/net.IPNet"
                    }
                },
                "excludedURIDomains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "extKeyUsage": {
                    "description": "Sequence of extended key usages.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/x509.ExtKeyUsage"
                    }
                },
                "extensions": {
                    "description": "Extensions contains raw X.509 extensions. When parsing certificates,\nthis can be used to extract non-critical extensions that are not\nparsed by this package. When marshaling certificates, the Extensions\nfield is ignored, see ExtraExtensions.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pkix.Extension"
                    }
                },
                "extraExtensions": {
                    "description": "ExtraExtensions contains extensions to be copied, raw, into any\nmarshaled certificates. Values override any extensions that would\notherwise be produced based on the other fields. The ExtraExtensions\nfield is not populated when parsing certificates, see Extensions.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pkix.Extension"
                    }
                },
                "ipaddresses": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "isCA": {
                    "type": "boolean"
                },
                "issuer": {
                    "$ref": "#/definitions/pkix.Name"
                },
                "issuingCertificateURL": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "keyUsage": {
                    "$ref": "#/definitions/x509.KeyUsage"
                },
                "maxPathLen": {
                    "description": "MaxPathLen and MaxPathLenZero indicate the presence and\nvalue of the BasicConstraints' \"pathLenConstraint\".\n\nWhen parsing a certificate, a positive non-zero MaxPathLen\nmeans that the field was specified, -1 means it was unset,\nand MaxPathLenZero being true mean that the field was\nexplicitly set to zero. The case of MaxPathLen==0 with MaxPathLenZero==false\nshould be treated equivalent to -1 (unset).\n\nWhen generating a certificate, an unset pathLenConstraint\ncan be requested with either MaxPathLen == -1 or using the\nzero value for both MaxPathLen and MaxPathLenZero.",
                    "type": "integer"
                },
                "maxPathLenZero": {
                    "description": "MaxPathLenZero indicates that BasicConstraintsValid==true\nand MaxPathLen==0 should be interpreted as an actual\nmaximum path length of zero. Otherwise, that combination is\ninterpreted as MaxPathLen not being set.",
                    "type": "boolean"
                },
                "notBefore": {
                    "description": "Validity bounds.",
                    "type": "string"
                },
                "ocspserver": {
                    "description": "RFC 5280, 4.2.2.1 (Authority Information Access)",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "permittedDNSDomains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "permittedDNSDomainsCritical": {
                    "description": "Name constraints",
                    "type": "boolean"
                },
                "permittedEmailAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "permittedIPRanges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/net.IPNet"
                    }
                },
                "permittedURIDomains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "policies": {
                    "description": "Policies contains all policy identifiers included in the certificate.\nIn Go 1.22, encoding/gob cannot handle and ignores this field.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/x509.OID"
                    }
                },
                "policyIdentifiers": {
                    "description": "PolicyIdentifiers contains asn1.ObjectIdentifiers, the components\nof which are limited to int32. If a certificate contains a policy which\ncannot be represented by asn1.ObjectIdentifier, it will not be included in\nPolicyIdentifiers, but will be present in Policies, which contains all parsed\npolicy OIDs.",
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "publicKey": {},
                "publicKeyAlgorithm": {
                    "$ref": "#/definitions/x509.PublicKeyAlgorithm"
                },
                "raw": {
                    "description": "Complete ASN.1 DER content (certificate, signature algorithm and signature).",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "rawIssuer": {
                    "description": "DER encoded Issuer",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "rawSubject": {
                    "description": "DER encoded Subject",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "rawSubjectPublicKeyInfo": {
                    "description": "DER encoded SubjectPublicKeyInfo.",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "rawTBSCertificate": {
                    "description": "Certificate part of raw ASN.1 DER content.",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "serialNumber": {
                    "$ref": "#/definitions/big.Int"
                },
                "signature": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "signatureAlgorithm": {
                    "$ref": "#/definitions/x509.SignatureAlgorithm"
                },
                "subject": {
                    "$ref": "#/definitions/pkix.Name"
                },
                "subjectKeyId": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "unhandledCriticalExtensions": {
                    "description": "UnhandledCriticalExtensions contains a list of extension IDs that\nwere not (fully) processed when parsing. Verify will fail if this\nslice is non-empty, unless verification is delegated to an OS\nlibrary which understands all the critical extensions.\n\nUsers can access these extensions using Extensions and can remove\nelements from this slice if they believe that they have been\nhandled.",
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "unknownExtKeyUsage": {
                    "description": "Encountered extended key usages unknown to this package.",
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "uris": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/url.URL"
                    }
                },
                "version": {
                    "type": "integer"
                }
            }
        },
        "x509.ExtKeyUsage": {
            "type": "integer",
            "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13
            ],
            "x-enum-varnames": [
                "ExtKeyUsageAny",
                "ExtKeyUsageServerAuth",
                "ExtKeyUsageClientAuth",
                "ExtKeyUsageCodeSigning",
                "ExtKeyUsageEmailProtection",
                "ExtKeyUsageIPSECEndSystem",
                "ExtKeyUsageIPSECTunnel",
                "ExtKeyUsageIPSECUser",
                "ExtKeyUsageTimeStamping",
                "ExtKeyUsageOCSPSigning",
                "ExtKeyUsageMicrosoftServerGatedCrypto",
                "ExtKeyUsageNetscapeServerGatedCrypto",
                "ExtKeyUsageMicrosoftCommercialCodeSigning",
                "ExtKeyUsageMicrosoftKernelCodeSigning"
            ]
        },
        "x509.KeyUsage": {
            "type": "integer",
            "enum": [
                1,
                2,
                4,
                8,
                16,
                32,
                64,
                128,
                256
            ],
            "x-enum-varnames": [
                "KeyUsageDigitalSignature",
                "KeyUsageContentCommitment",
                "KeyUsageKeyEncipherment",
                "KeyUsageDataEncipherment",
                "KeyUsageKeyAgreement",
                "KeyUsageCertSign",
                "KeyUsageCRLSign",
                "KeyUsageEncipherOnly",
                "KeyUsageDecipherOnly"
            ]
        },
        "x509.OID": {
            "type": "object"
        },
        "x509.PublicKeyAlgorithm": {
            "type": "integer",
            "enum": [
                0,
                1,
                2,
                3,
                4
            ],
            "x-enum-comments": {
                "DSA": "Only supported for parsing."
            },
            "x-enum-varnames": [
                "UnknownPublicKeyAlgorithm",
                "RSA",
                "DSA",
                "ECDSA",
                "Ed25519"
            ]
        },
        "x509.SignatureAlgorithm": {
            "type": "integer",
            "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16
            ],
            "x-enum-comments": {
                "DSAWithSHA1": "Unsupported.",
                "DSAWithSHA256": "Unsupported.",
                "ECDSAWithSHA1": "Only supported for signing, and verification of CRLs, CSRs, and OCSP responses.",
                "MD2WithRSA": "Unsupported.",
                "MD5WithRSA": "Only supported for signing, not verification.",
                "SHA1WithRSA": "Only supported for signing, and verification of CRLs, CSRs, and OCSP responses."
            },
            "x-enum-varnames": [
                "UnknownSignatureAlgorithm",
                "MD2WithRSA",
                "MD5WithRSA",
                "SHA1WithRSA",
                "SHA256WithRSA",
                "SHA384WithRSA",
                "SHA512WithRSA",
                "DSAWithSHA1",
                "DSAWithSHA256",
                "ECDSAWithSHA1",
                "ECDSAWithSHA256",
                "ECDSAWithSHA384",
                "ECDSAWithSHA512",
                "SHA256WithRSAPSS",
                "SHA384WithRSAPSS",
                "SHA512WithRSAPSS",
                "PureEd25519"
            ]
        }
    }
}
